[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\store.service.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\privateRoute.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\socket.service.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\auth.service.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\NotFound.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\account.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\menu.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\home\\home.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\updatePassword.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\authenticate\\login.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\authenticate\\register.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\reducer\\updateUser.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\host.service.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\data.service.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\topBar.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\sideBar.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\home\\listUser.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\title.service.js":"20","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\sideBarList.js":"21","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\FinishRoomList.js":"22","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\RoomFinish.js":"23","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\game.js":"24","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\board.js":"25","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\index.js":"26","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\square.js":"27","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js":"28","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js":"29","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js":"30","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js":"31","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js":"32","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js":"33","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js":"34"},{"size":385,"mtime":1607360108709,"results":"35","hashOfConfig":"36"},{"size":3329,"mtime":1609381790310,"results":"37","hashOfConfig":"36"},{"size":154,"mtime":1607360108713,"results":"38","hashOfConfig":"36"},{"size":635,"mtime":1607360108710,"results":"39","hashOfConfig":"36"},{"size":214,"mtime":1608857798070,"results":"40","hashOfConfig":"36"},{"size":1657,"mtime":1608857798068,"results":"41","hashOfConfig":"36"},{"size":284,"mtime":1607360108703,"results":"42","hashOfConfig":"36"},{"size":6715,"mtime":1608857813508,"results":"43","hashOfConfig":"36"},{"size":692,"mtime":1607360108707,"results":"44","hashOfConfig":"36"},{"size":1967,"mtime":1607360108706,"results":"45","hashOfConfig":"36"},{"size":6000,"mtime":1607360108704,"results":"46","hashOfConfig":"36"},{"size":5122,"mtime":1607360108705,"results":"47","hashOfConfig":"36"},{"size":8379,"mtime":1607360108705,"results":"48","hashOfConfig":"36"},{"size":328,"mtime":1609382388471,"results":"49","hashOfConfig":"36"},{"size":249,"mtime":1609379927569,"results":"50","hashOfConfig":"36"},{"size":1174,"mtime":1609383248532,"results":"51","hashOfConfig":"36"},{"size":4031,"mtime":1607360108709,"results":"52","hashOfConfig":"36"},{"size":2034,"mtime":1607360108708,"results":"53","hashOfConfig":"36"},{"size":1794,"mtime":1607360108707,"results":"54","hashOfConfig":"36"},{"size":439,"mtime":1607360108713,"results":"55","hashOfConfig":"36"},{"size":1973,"mtime":1609381673283,"results":"56","hashOfConfig":"36"},{"size":6843,"mtime":1609382418009,"results":"57","hashOfConfig":"36"},{"size":6259,"mtime":1609382437574,"results":"58","hashOfConfig":"36"},{"size":9512,"mtime":1609383398293,"results":"59","hashOfConfig":"36"},{"size":979,"mtime":1609381752496,"results":"60","hashOfConfig":"36"},{"size":66,"mtime":1609381752483,"results":"61","hashOfConfig":"36"},{"size":230,"mtime":1609381752500,"results":"62","hashOfConfig":"36"},{"size":1780,"mtime":1609383442854,"results":"63","hashOfConfig":"36"},{"size":1038,"mtime":1609381752461,"results":"64","hashOfConfig":"36"},{"size":237,"mtime":1609381752448,"results":"65","hashOfConfig":"36"},{"size":413,"mtime":1609381752458,"results":"66","hashOfConfig":"36"},{"size":378,"mtime":1609381752474,"results":"67","hashOfConfig":"36"},{"size":955,"mtime":1609381752481,"results":"68","hashOfConfig":"36"},{"size":1109,"mtime":1609381752466,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1lkxazn",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\index.js",[],["145","146"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\store.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\privateRoute.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\socket.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\auth.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\NotFound.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\account.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\menu.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\home\\home.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\updatePassword.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\authenticate\\login.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\authenticate\\register.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\reducer\\updateUser.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\host.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\data.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\topBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\sideBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\home\\listUser.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\utils\\title.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\menu\\sideBarList.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\admin\\FinishRoomList.js",["147"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Container,\r\n  CssBaseline,\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  Card,\r\n  Divider,\r\n  Typography,\r\n  Avatar,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport DataService from \"../../utils/data.service\";\r\nimport store from '../../utils/store.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(4),\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    borderTop: '1px solid #999'\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic'\r\n  },\r\n\r\n  timeCell: {\r\n    minWidth: '150px',\r\n    maxWidth: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  nameCell: {\r\n    minWidth: '100px',\r\n    maxWidth: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  footer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  footerRow: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-start'\r\n  },\r\n  buttonBox: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    margin: '0px 5px 0px 5px',\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst FinishRoomList = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [user, setUser] = useState(store.getState());\r\n  store.subscribe(() => {\r\n    setUser(store.getState());\r\n  });\r\n\r\n  // get initial data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (user) {\r\n          const res = await DataService.getFinishRoomList(user.ID);\r\n          setData(res.data);\r\n        }\r\n      }\r\n      catch (error) {\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        alert(resMessage);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [user])\r\n\r\n  // table\r\n  const [selected, setSelected] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const rows = data;\r\n\r\n  const handleClick = (event, name) => {\r\n    if (selected === name) {\r\n      setSelected(null);\r\n      setRoomId(null);\r\n    }\r\n    else {\r\n      setSelected(name);\r\n      setRoomId(name);\r\n    }\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const emptyRows = rows ? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : 0;\r\n\r\n  // button\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const handleClickViewer = () => {\r\n    history.push(\"/History/Room/\" + roomId);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth={false} className={classes.container}>\r\n      <CssBaseline />\r\n      <Card className={classes.card}>\r\n        <Avatar className={classes.avatar}>\r\n          <TableChartIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Game History\r\n        </Typography>\r\n        <Divider />\r\n        <TableContainer className={classes.form}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className={classes.bold}>Created</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Player 1</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Player 2</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                  const isItemSelected = row.ID === selected;\r\n\r\n                  const isPlayer1 = row.name1 === user.name ? 1 : 2;\r\n                  let isWin = null;\r\n                  if (row.winner === 0) {\r\n                    isWin = \"Draw\"\r\n                  }\r\n                  else if (isPlayer1 === row.winner) {\r\n                    isWin = \"Won\"\r\n                  }\r\n                  else if (isPlayer1 !== row.winner) {\r\n                    isWin = \"Lost\"\r\n                  }\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.ID)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.ID}\r\n                      selected={isItemSelected}>\r\n                      <TableCell component=\"th\" id={index} scope=\"row\" className={classes.timeCell}>\r\n                        <Moment fromNow>{row.dateCreate}</Moment>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" className={classes.nameCell}>{row.name1}</TableCell>\r\n                      <TableCell align=\"right\" className={classes.nameCell}>{row.name2}</TableCell>\r\n                      <TableCell align=\"right\" className={classes.bold}>{isWin}</TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })\r\n                : <></>\r\n              }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TableFooter className={classes.footer}>\r\n          <TableRow className={classes.footerRow}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5]}\r\n              count={rows ? rows.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              component='div'\r\n              onChangePage={handleChangePage}\r\n            />\r\n            <Box className={classes.buttonBox}>\r\n              <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickViewer}>\r\n                View\r\n            </Button>\r\n            </Box>\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FinishRoomList;","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\RoomFinish.js",["148"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  Box,\r\n  Snackbar,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaTrophy } from \"react-icons/fa\";\r\n\r\nimport Game from './Game/game';\r\nimport { Chat } from './ChatOnline'\r\nimport socket from \"../../utils/socket.service\";\r\nimport store from '../../utils/store.service';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n  container: {\r\n    marginTop: '20px',\r\n    marginBottom: '80px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  playerName: {\r\n    maxWidth: \"100%\",\r\n    wordWrap: 'break-word',\r\n  },\r\n  gridHeight: {\r\n    minHeight: '440px',\r\n    maxHeight: \"440px\",\r\n  },\r\n  winColor: {\r\n    color: \"green\",\r\n  },\r\n  shareButtonContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n  nameContainerLeft: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'flex-start',\r\n  },\r\n  nameContainerRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'flex-end',\r\n  },\r\n  trophyIcon: {\r\n    margin: '0 5px'\r\n  },\r\n  trophyCount: {\r\n    fontSize: '14px',\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nexport default function RoomFinish(props) {\r\n  const classes = useStyles();\r\n  const ID = useParams().id;\r\n  const [room, setRoom] = useState();                   // room's data\r\n  const [gameData, setGameData] = useState();           //game's data\r\n  const [user, setUser] = useState(store.getState());\r\n  const [open, setOpen] = useState(false);             // snackbar's status\r\n  store.subscribe(() => {\r\n    setUser(store.getState());\r\n  });\r\n\r\n  // get room data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await DataService.getFinishRoom(ID);\r\n        setRoom(res.data.data[0]);\r\n        setGameData(res.data.gameData);\r\n      }\r\n      catch (error) {\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        alert(resMessage);\r\n      }\r\n    }\r\n    fetchData();\r\n\r\n  }, [ID]);\r\n\r\n  // copy ID room to clipboard\r\n  const copyLink = () => {\r\n\r\n    const link = ID;\r\n    // create temporary DOM to hold link, copy to clipboard then remove it\r\n    const dummy = document.createElement('input');\r\n    dummy.value = link;\r\n    document.body.appendChild(dummy);\r\n    dummy.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(dummy);\r\n\r\n    // show alert\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item sm={8} xs={12} className={classes.gridHeight} >\r\n            <Card>\r\n              <Box className={classes.shareButtonContainer}>\r\n                <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => copyLink()}>\r\n                  Get room's ID\r\n                </Button>\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                  open={open}\r\n                  onClose={handleCloseSnackbar}\r\n                  message=\"ID copied to clipboard\"\r\n                />\r\n              </Box>\r\n              <CardContent>\r\n                {room\r\n                  ?\r\n                  <Grid container spacing={3} >\r\n                    <Grid container item xs={4} className={classes.nameContainerLeft} zeroMinWidth>\r\n                      <Typography variant=\"h5\" noWrap className={room.winner === 1 ? classes.winColor : null}>{room.name1 ? \"(X) \" + room.name1 : \"(X) Waiting\"}</Typography>\r\n                      {room.name1\r\n                        ? <Box className={classes.trophyCount}>\r\n                          <IconContext.Provider value={{ color: '#e5c100' }}>\r\n                            <FaTrophy className={classes.trophyIcon} />\r\n                          </IconContext.Provider>\r\n                          <Typography noWrap className={null}> - {room.score1}</Typography>\r\n                        </Box>\r\n                        : <></>}\r\n                    </Grid>\r\n                    <Grid container item xs={4} justify=\"center\">\r\n                      <Typography variant=\"h5\">VS</Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={4} className={classes.nameContainerRight} zeroMinWidth>\r\n                      <Typography variant=\"h5\" noWrap className={room.winner === 2 ? classes.winColor : null}>{room.name2 ? \"(X) \" + room.name2 : \"(X) Waiting\"}</Typography>\r\n                      {room.name2\r\n                        ? <Box className={classes.trophyCount}>\r\n                          <Typography noWrap className={null}>{room.score2} - </Typography>\r\n                          <IconContext.Provider value={{ color: '#FFD700' }}>\r\n                            <FaTrophy className={classes.trophyIcon} />\r\n                          </IconContext.Provider>\r\n                        </Box>\r\n                        : <></>}\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  : <></>\r\n                }\r\n                <Divider />\r\n                <Game roomID={ID} roomData={room} gameData={gameData} />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item sm={4} xs={12} className={classes.gridHeight} >\r\n            {user\r\n              ? <Chat userID={user.ID} name={user.name} room={ID} />\r\n              : <Chat userID={null} name={null} room={ID} />}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\game.js",["149","150","151","152"],"import React, { useState, useEffect } from \"react\";\r\nimport './game.css';\r\nimport Board from './board.js';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\nimport socket from \"../../../utils/socket.service\";\r\nimport store from \"../../../utils/store.service\";\r\nimport config from \"../../../utils/config.json\";\r\n\r\n\r\nfunction Game(props) {\r\n    // change these to change the size of the board\r\n    const squareSize = config[\"square-size\"];\r\n    const column = config.column;\r\n    const row = config.row;\r\n    const gameData = props.gameData;\r\n    const roomData = props.roomData;\r\n\r\n    const [history, setHistory] = useState();\r\n    const [stepNumber, setStepNumber] = useState();\r\n    const [xIsNext, setXIsNext] = useState();\r\n    const [newMove, setNewMove] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        // set innitial data\r\n        if (gameData) {\r\n            setHistory(gameData.history);\r\n            setStepNumber(gameData.stepNumber);\r\n            setXIsNext(gameData.xIsNext);\r\n        }\r\n    }, [gameData]);\r\n\r\n    const calculateWinner = (squares, stepNumber, move) => {\r\n        const row = 50;\r\n        const column = 50;\r\n        const win = 5;\r\n\r\n        //  illegal move\r\n        if (move === -1) {\r\n            return ({\r\n                line: null,\r\n                status: -1,\r\n            })\r\n        }\r\n\r\n        // 1d array to 2d array\r\n        const x = Math.floor(move / column);\r\n        const y = move % column;\r\n\r\n        // check column\r\n        let line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + y]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + y] !== null) {\r\n                line.push(tempX * column + y);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check row\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempY = y + i;\r\n            // skip line start from outside and line too short\r\n            if (tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[x * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[x * column + tempY] !== null) {\r\n                line.push(x * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y + i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check anti-diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y - i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check draw\r\n        if (stepNumber === column * row) {\r\n            return ({\r\n                line: null,\r\n                status: 0,\r\n            })\r\n        }\r\n\r\n        // game continues\r\n        return ({\r\n            line: null,\r\n            status: -1,\r\n        })\r\n    }\r\n\r\n    const handleClick = (i, previousMove) => {\r\n        // handle click\r\n        const newHistory = history.slice(0, stepNumber + 1);\r\n        const current = newHistory[newHistory.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        // check if move is valid locally\r\n        const checkFinish = calculateWinner(squares, stepNumber, previousMove);\r\n        if (checkFinish.status !== -1 || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = xIsNext ? 'X' : 'O';\r\n\r\n        setHistory(\r\n            newHistory.concat([{\r\n                squares: squares,\r\n                move: i,\r\n            }])\r\n        );\r\n        setStepNumber(newHistory.length);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n\r\n\r\n    /*     \r\n    //undo\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXIsNext((step % 2) === 0);\r\n    }\r\n    */\r\n\r\n    if (!history || !roomData) {\r\n        return (<CircularProgress />)\r\n    }\r\n    else {\r\n        const current = history[stepNumber];\r\n        const winner = calculateWinner(current.squares, stepNumber, current.move);\r\n\r\n        const moves = history.map((turn, i) => {\r\n            const x = Math.floor(turn.move / column);\r\n            const y = turn.move % column;\r\n\r\n            const player = (i % 2) === 0 ? \"O\" : \"X\";\r\n\r\n            const desc = i ?\r\n                'Turn ' + i + ': (' + x + ',' + y + ') - ' + player :\r\n                'Game start';\r\n            /*\r\n            // undo\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => jumpTo(move)}>\r\n                        {current === turn ? <b>{desc}</b> : <>{desc}</>}\r\n                    </button>\r\n                </li>\r\n            );\r\n            */\r\n            return (\r\n                <li key={i}>\r\n                    {current === turn ? <b>{desc}</b> : <>{desc}</>}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let statusDes;\r\n        const finalMoves = moves.slice().reverse();\r\n        if (winner.status === -1) {\r\n            statusDes = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n        }\r\n        else if (winner.status === 0) {\r\n            statusDes = 'Draw';\r\n        }\r\n        else {\r\n            statusDes = 'Winner: ' + winner.status;\r\n        }\r\n\r\n        return (\r\n            <Box className=\"game\" >\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={8} >\r\n                        <Box width=\"95%\" height={290} overflow=\"auto\">\r\n                            <Box className=\"gameContainer\" height={squareSize * row} width={squareSize * column}>\r\n                                <Board\r\n                                    column={column}\r\n                                    row={row}\r\n                                    squares={current.squares}\r\n                                    onClick={(i) => handleClick(i, current.move)}\r\n                                    winnerLine={winner.line}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Box width=\"95%\" height={290} overflow=\"auto\">\r\n                            {(roomData.idUser1 && roomData.idUser2)\r\n                                ? <div>\r\n                                    <div>\r\n                                        {winner.line\r\n                                            ? <b>{statusDes}</b>\r\n                                            : <>{statusDes}</>\r\n                                        }\r\n                                    </div>\r\n                                    <div>History: </div>\r\n                                    <ol>{finalMoves}</ol>\r\n                                </div>\r\n                                : <div>Waiting for both players</div>\r\n                            }\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Game;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\board.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\Game\\square.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js",["153","154","155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent\r\n} from '@material-ui/core';\r\n\r\nimport { InfoBar } from '../InforBar/InforBar';\r\nimport { Input } from '../Input/Input';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { TextContainer } from '../TextContainter/TextContainer'\r\nimport socket from \"../../../../utils/socket.service\";\r\nimport DataService from \"../../../../utils/data.service\";\r\nimport './Chat.css';\r\n\r\nexport const Chat = (props) => {\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await DataService.getMessage(props.room);\r\n                setMessages(res.data);\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response && error.response.data && error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                alert(resMessage);\r\n            }\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"outerContainer\">\r\n            {true ? <></> :\r\n                <TextContainer users={users} />}\r\n            <div className=\"container\">\r\n                <InfoBar room={props.room} />\r\n                {props.name\r\n                    ? <>\r\n                        <Messages messages={messages} name={props.name} />\r\n                        <Input message={message} />\r\n                    </>\r\n                    : <CardContent className=\"notLogin\">Login to see chat</CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js",["157","158"],"import React from 'react';\r\n\r\nimport './Input.css';\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport const Input = ({ message }) => (\r\n    <form className=\"form\">\r\n        <input\r\n            readOnly\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Game has end\"\r\n            value={message}\r\n        />\r\n    </form>\r\n);","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Admin\\admin-ui\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js",[],["159","160"],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":127,"column":23,"nodeType":"167","messageId":"168","endLine":127,"endColumn":37},{"ruleId":"165","severity":1,"message":"169","line":22,"column":8,"nodeType":"167","messageId":"168","endLine":22,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":14},{"ruleId":"165","severity":1,"message":"170","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":13},{"ruleId":"165","severity":1,"message":"171","line":25,"column":12,"nodeType":"167","messageId":"168","endLine":25,"endColumn":19},{"ruleId":"165","severity":1,"message":"172","line":25,"column":21,"nodeType":"167","messageId":"168","endLine":25,"endColumn":31},{"ruleId":"165","severity":1,"message":"169","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":14},{"ruleId":"165","severity":1,"message":"173","line":16,"column":19,"nodeType":"167","messageId":"168","endLine":16,"endColumn":27},{"ruleId":"165","severity":1,"message":"174","line":17,"column":21,"nodeType":"167","messageId":"168","endLine":17,"endColumn":31},{"ruleId":"175","severity":1,"message":"176","line":36,"column":8,"nodeType":"177","endLine":36,"endColumn":10,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":4,"column":9,"nodeType":"167","messageId":"168","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"180","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":16},{"ruleId":"161","replacedBy":"181"},{"ruleId":"163","replacedBy":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'setRowsPerPage' is assigned a value but never used.","Identifier","unusedVar","'socket' is defined but never used.","'store' is defined but never used.","'newMove' is assigned a value but never used.","'setNewMove' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.room'. Either include it or remove the dependency array.","ArrayExpression",["185"],"'green' is defined but never used.","'SendIcon' is defined but never used.",["183"],["184"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [props.room]",{"range":"188","text":"189"},[1183,1185],"[props.room]"]