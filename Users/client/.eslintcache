[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\store.service.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\PrivateRoute.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\socket.service.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\auth.service.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\Home.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Menu.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\NotFound.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\Account.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\SignUp.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\Login.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ChangePass.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\host.service.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ListUser.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBar.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Topbar.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\data.service.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBarList.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\title.service.js":"20","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\FinishRoomList.js":"21","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Room.js":"22","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\RoomFinish.js":"23","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\reducer\\reducer.js":"24","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\ListContainer.js":"25","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\game.js":"26","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\game.js":"27","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\index.js":"28","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\board.js":"29","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\board.js":"30","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\index.js":"31","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\OnlineRoomList.js":"32","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Join\\Join.js":"33","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Chat\\Chat.js":"34","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\square.js":"35","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\square.js":"36","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js":"37","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js":"38","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\TextContainter\\TextContainer.js":"39","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Messages.js":"40","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Input\\Input.js":"41","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\InforBar\\InforBar.js":"42","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js":"43","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js":"44","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Message\\Message.js":"45","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js":"46","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js":"47","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js":"48","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Countdown\\Countdown.js":"49","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ActiveAccount.js":"50","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ForgotPassword.js":"51","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ResetPassword.js":"52","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ranking.js":"53","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\UserProfile.js":"54"},{"size":367,"mtime":1608857798130,"results":"55","hashOfConfig":"56"},{"size":4616,"mtime":1610073738711,"results":"57","hashOfConfig":"56"},{"size":228,"mtime":1609679788104,"results":"58","hashOfConfig":"56"},{"size":513,"mtime":1608857798110,"results":"59","hashOfConfig":"56"},{"size":214,"mtime":1608857798133,"results":"60","hashOfConfig":"56"},{"size":1861,"mtime":1610025048011,"results":"61","hashOfConfig":"56"},{"size":2006,"mtime":1610025047955,"results":"62","hashOfConfig":"56"},{"size":693,"mtime":1608948953501,"results":"63","hashOfConfig":"56"},{"size":278,"mtime":1608857798124,"results":"64","hashOfConfig":"56"},{"size":6043,"mtime":1610531410977,"results":"65","hashOfConfig":"56"},{"size":7637,"mtime":1610529588621,"results":"66","hashOfConfig":"56"},{"size":6182,"mtime":1610529684123,"results":"67","hashOfConfig":"56"},{"size":6417,"mtime":1610531400740,"results":"68","hashOfConfig":"56"},{"size":231,"mtime":1610533858014,"results":"69","hashOfConfig":"56"},{"size":6193,"mtime":1610526356436,"results":"70","hashOfConfig":"56"},{"size":1812,"mtime":1608857798123,"results":"71","hashOfConfig":"56"},{"size":8628,"mtime":1609515013876,"results":"72","hashOfConfig":"56"},{"size":2332,"mtime":1610256263457,"results":"73","hashOfConfig":"56"},{"size":2041,"mtime":1610531479216,"results":"74","hashOfConfig":"56"},{"size":460,"mtime":1609515014033,"results":"75","hashOfConfig":"56"},{"size":6816,"mtime":1610531441491,"results":"76","hashOfConfig":"56"},{"size":11972,"mtime":1610533760226,"results":"77","hashOfConfig":"56"},{"size":6584,"mtime":1610533740328,"results":"78","hashOfConfig":"56"},{"size":750,"mtime":1609515014012,"results":"79","hashOfConfig":"56"},{"size":4873,"mtime":1610025047965,"results":"80","hashOfConfig":"56"},{"size":9037,"mtime":1610526356600,"results":"81","hashOfConfig":"56"},{"size":13771,"mtime":1610523090371,"results":"82","hashOfConfig":"56"},{"size":66,"mtime":1609515013910,"results":"83","hashOfConfig":"56"},{"size":937,"mtime":1610526356449,"results":"84","hashOfConfig":"56"},{"size":979,"mtime":1609515013911,"results":"85","hashOfConfig":"56"},{"size":66,"mtime":1609515013946,"results":"86","hashOfConfig":"56"},{"size":8144,"mtime":1609679788044,"results":"87","hashOfConfig":"56"},{"size":1038,"mtime":1609515013906,"results":"88","hashOfConfig":"56"},{"size":2006,"mtime":1609515013892,"results":"89","hashOfConfig":"56"},{"size":206,"mtime":1610526356455,"results":"90","hashOfConfig":"56"},{"size":230,"mtime":1609515013913,"results":"91","hashOfConfig":"56"},{"size":1038,"mtime":1609515013920,"results":"92","hashOfConfig":"56"},{"size":1780,"mtime":1609515013915,"results":"93","hashOfConfig":"56"},{"size":955,"mtime":1609515013910,"results":"94","hashOfConfig":"56"},{"size":378,"mtime":1609515013908,"results":"95","hashOfConfig":"56"},{"size":1189,"mtime":1609515013903,"results":"96","hashOfConfig":"56"},{"size":237,"mtime":1609515013896,"results":"97","hashOfConfig":"56"},{"size":955,"mtime":1609515013944,"results":"98","hashOfConfig":"56"},{"size":378,"mtime":1609515013938,"results":"99","hashOfConfig":"56"},{"size":1109,"mtime":1609515013907,"results":"100","hashOfConfig":"56"},{"size":413,"mtime":1609515013918,"results":"101","hashOfConfig":"56"},{"size":237,"mtime":1609515013917,"results":"102","hashOfConfig":"56"},{"size":1109,"mtime":1609515013921,"results":"103","hashOfConfig":"56"},{"size":1310,"mtime":1610025047788,"results":"104","hashOfConfig":"56"},{"size":2127,"mtime":1610025047984,"results":"105","hashOfConfig":"56"},{"size":4523,"mtime":1610025048000,"results":"106","hashOfConfig":"56"},{"size":5379,"mtime":1610025048009,"results":"107","hashOfConfig":"56"},{"size":9104,"mtime":1610526356462,"results":"108","hashOfConfig":"56"},{"size":6093,"mtime":1610530792295,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1lsjbq4",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"112"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"112"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\index.js",[],["228","229"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\store.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\PrivateRoute.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\socket.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\auth.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Menu.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\NotFound.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\Account.js",["230"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\SignUp.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\Login.js",["231"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ChangePass.js",["232"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\host.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ListUser.js",["233","234"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Topbar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\data.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBarList.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\title.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\FinishRoomList.js",["235","236"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Room.js",["237","238","239","240","241"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\RoomFinish.js",["242"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\reducer\\reducer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\ListContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\game.js",["243","244","245","246"],"import React, { useState, useEffect } from \"react\";\r\nimport './game.css';\r\nimport Board from './board.js';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    CircularProgress,\r\n} from '@material-ui/core';\r\nimport socket from \"../../../utils/socket.service\";\r\nimport store from \"../../../utils/store.service\";\r\nimport config from \"../../../utils/config.json\";\r\n\r\n\r\nfunction Game(props) {\r\n    // change these to change the size of the board\r\n    const squareSize = config[\"square-size\"];\r\n    const column = config.column;\r\n    const row = config.row;\r\n    const gameData = props.gameData;\r\n    const roomData = props.roomData;\r\n\r\n    const [history, setHistory] = useState();\r\n    const [stepNumber, setStepNumber] = useState();\r\n    const [xIsNext, setXIsNext] = useState();\r\n    const [newMove, setNewMove] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        // set innitial data\r\n        if (gameData) {\r\n            setHistory(gameData.history);\r\n            setStepNumber(gameData.stepNumber);\r\n            setXIsNext(gameData.xIsNext);\r\n        }\r\n    }, [gameData]);\r\n\r\n    const calculateWinner = (squares, stepNumber, move) => {\r\n        const row = 50;\r\n        const column = 50;\r\n        const win = 5;\r\n\r\n        //  illegal move\r\n        if (move === -1) {\r\n            return ({\r\n                line: null,\r\n                status: -1,\r\n            })\r\n        }\r\n\r\n        // 1d array to 2d array\r\n        const x = Math.floor(move / column);\r\n        const y = move % column;\r\n\r\n        // check column\r\n        let line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + y]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + y] !== null) {\r\n                line.push(tempX * column + y);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check row\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempY = y + i;\r\n            // skip line start from outside and line too short\r\n            if (tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[x * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[x * column + tempY] !== null) {\r\n                line.push(x * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y + i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check anti-diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y - i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check draw\r\n        if (stepNumber === column * row) {\r\n            return ({\r\n                line: null,\r\n                status: 0,\r\n            })\r\n        }\r\n\r\n        // game continues\r\n        return ({\r\n            line: null,\r\n            status: -1,\r\n        })\r\n    }\r\n\r\n    /*     \r\n    //undo\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXIsNext((step % 2) === 0);\r\n    }\r\n    */\r\n\r\n    if (!history || !roomData) {\r\n        return (<CircularProgress />)\r\n    }\r\n    else {\r\n        const current = history[stepNumber];\r\n        const winner = calculateWinner(current.squares, stepNumber, current.move);\r\n\r\n        const moves = history.map((turn, i) => {\r\n            const x = Math.floor(turn.move / column);\r\n            const y = turn.move % column;\r\n\r\n            const player = (i % 2) === 0 ? \"O\" : \"X\";\r\n\r\n            const desc = i ?\r\n                'Turn ' + i + ': (' + x + ',' + y + ') - ' + player :\r\n                'Game start';\r\n            /*\r\n            // undo\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => jumpTo(move)}>\r\n                        {current === turn ? <b>{desc}</b> : <>{desc}</>}\r\n                    </button>\r\n                </li>\r\n            );\r\n            */\r\n            return (\r\n                <li key={i}>\r\n                    {current === turn ? <b>{desc}</b> : <>{desc}</>}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let statusDes;\r\n        const finalMoves = moves.slice().reverse();\r\n\r\n        if (roomData.winner === -1) {\r\n            if (winner.status === -1) {\r\n                statusDes = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n            }\r\n            else if (winner.status === 0) {\r\n                statusDes = 'Draw';\r\n            }\r\n            else {\r\n                statusDes = 'Winner: ' + winner.status;\r\n            }\r\n        }\r\n        else {\r\n            if (roomData.winner === 0) {\r\n                statusDes = 'Draw';\r\n            }\r\n            else {\r\n                \r\n                statusDes = 'Winner: ' + (roomData.winner === 1 ? \"X\" : \"O\");\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <Box className=\"game\" >\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={8} >\r\n                        <Box width=\"95%\" height={290} overflow=\"auto\">\r\n                            <Box className=\"gameContainer\" height={squareSize * row} width={squareSize * column}>\r\n                                <Board\r\n                                    column={column}\r\n                                    row={row}\r\n                                    squares={current.squares}\r\n                                    winnerLine={winner.line}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Box width=\"95%\" height={290} overflow=\"auto\">\r\n                            {(roomData.idUser1 && roomData.idUser2)\r\n                                ? <div>\r\n                                    <div>\r\n                                        {winner.line\r\n                                            ? <b>{statusDes}</b>\r\n                                            : <>{statusDes}</>\r\n                                        }\r\n                                    </div>\r\n                                    <div>History: </div>\r\n                                    <ol>{finalMoves}</ol>\r\n                                </div>\r\n                                : <div>Waiting for both players</div>\r\n                            }\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Game;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\game.js",["247"],"import React, { useState, useEffect } from \"react\";\r\nimport './game.css';\r\nimport Board from './board.js';\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Button,\r\n    CircularProgress,\r\n    makeStyles,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport socket from \"../../../utils/socket.service\";\r\nimport store from \"../../../utils/store.service\";\r\nimport config from \"../../../utils/config.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rightContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    infoContainer: {\r\n        width: '100%',\r\n    },\r\n    turnContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        overflowY: 'auto',\r\n        marginBottom: '10px',\r\n        borderBottom: '1px solid #999'\r\n    },\r\n\r\n    readyContainer: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    buttonContainer: {\r\n        minHeight: '36px',\r\n        maxHeight: '36px',\r\n        width: '100%',\r\n    }\r\n}));\r\n\r\nfunction Game(props) {\r\n    const classes = useStyles();\r\n\r\n    // change these to change the size of the board\r\n    const squareSize = config[\"square-size\"];\r\n    const column = config.column;\r\n    const row = config.row;\r\n    const gameData = props.gameData;\r\n    const roomData = props.roomData;\r\n    const [history, setHistory] = useState();\r\n    const [stepNumber, setStepNumber] = useState();\r\n    const [xIsNext, setXIsNext] = useState();\r\n    const [newMove, setNewMove] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        // set innitial data\r\n        if (gameData) {\r\n            setHistory(gameData.history);\r\n            setStepNumber(gameData.stepNumber);\r\n            setXIsNext(gameData.xIsNext);\r\n        }\r\n\r\n        // wait for new move\r\n        socket.on('wait_new_move', setNewMove);\r\n\r\n        return () => {\r\n            socket.off(\"wait_new_move\");\r\n        }\r\n    }, [gameData]);\r\n\r\n    useEffect(() => {\r\n        if (newMove !== -1) {\r\n            receiveMove(newMove);\r\n            props.setReset(true);\r\n        }\r\n    }, [newMove]);\r\n\r\n    const receiveMove = (newMove) => {\r\n        if (newMove !== -1 && history) {\r\n            // handle click\r\n            const newHistory = history.slice(0, stepNumber + 1);\r\n            const current = newHistory[newHistory.length - 1];\r\n            const squares = current.squares.slice();\r\n\r\n            squares[newMove] = xIsNext ? 'X' : 'O';\r\n            setHistory(\r\n                newHistory.concat([{\r\n                    squares: squares,\r\n                    move: newMove,\r\n                }])\r\n            );\r\n            setStepNumber(newHistory.length);\r\n            setXIsNext(!xIsNext);\r\n        }\r\n    }\r\n\r\n    const calculateWinner = (squares, stepNumber, move) => {\r\n        const row = 50;\r\n        const column = 50;\r\n        const win = 5;\r\n\r\n        //  illegal move\r\n        if (move === -1) {\r\n            return ({\r\n                line: null,\r\n                status: -1,\r\n            })\r\n        }\r\n\r\n        // 1d array to 2d array\r\n        const x = Math.floor(move / column);\r\n        const y = move % column;\r\n\r\n        // check column\r\n        let line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + y]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + y] !== null) {\r\n                line.push(tempX * column + y);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check row\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempY = y + i;\r\n            // skip line start from outside and line too short\r\n            if (tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[x * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[x * column + tempY] !== null) {\r\n                line.push(x * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y + i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check anti-diagonal\r\n        line = [];\r\n        for (let i = 0 - win; i < win; i++) {\r\n            const tempX = x + i;\r\n            const tempY = y - i;\r\n\r\n            // skip line start from outside and line too short\r\n            if (tempX < 0 || tempX > row || tempY < 0 || tempY > column) {\r\n                continue;\r\n            }\r\n            // if line has at least 1 square, check next square\r\n            if (line.length !== 0 && squares[line[0]] !== squares[tempX * column + tempY]) {\r\n                line = [];\r\n            }\r\n            // ignore empty square\r\n            if (squares[tempX * column + tempY] !== null) {\r\n                line.push(tempX * column + tempY);\r\n            }\r\n            // check if line's length == win\r\n            if (line.length === win) {\r\n                return ({\r\n                    line: line,\r\n                    status: squares[x * column + y],\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n        // check draw\r\n        if (stepNumber === column * row) {\r\n            return ({\r\n                line: null,\r\n                status: 0,\r\n            })\r\n        }\r\n\r\n        // game continues\r\n        return ({\r\n            line: null,\r\n            status: -1,\r\n        })\r\n    }\r\n\r\n    const handleClick = (i, previousMove) => {\r\n        if (!props.isPlayer) {\r\n            return;\r\n        }\r\n        // handle click\r\n        const newHistory = history.slice(0, stepNumber + 1);\r\n        const current = newHistory[newHistory.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        // check if move is valid locally\r\n        const checkFinish = calculateWinner(squares, stepNumber, previousMove);\r\n        if (checkFinish.status !== -1 || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        // check if move is valid on server\r\n        const user = store.getState().user;\r\n        socket.emit(\"play\", { move: i, userID: user.ID, roomID: props.roomID, turn: stepNumber + 1 },\r\n            (isValid) => {                  // callback after server check\r\n                if (isValid) {\r\n                    squares[i] = xIsNext ? 'X' : 'O';\r\n\r\n                    setHistory(\r\n                        newHistory.concat([{\r\n                            squares: squares,\r\n                            move: i,\r\n                        }])\r\n                    );\r\n                    setStepNumber(newHistory.length);\r\n                    setXIsNext(!xIsNext);\r\n\r\n                    // check win\r\n                    const checkFinish = calculateWinner(squares, stepNumber, i);\r\n                    if (checkFinish.status !== -1) {\r\n                        socket.emit(\"game_finish\", { roomID: props.roomID, status: checkFinish.status });\r\n                    }\r\n                    else {\r\n                        console.log('here');\r\n                        props.setReset(true);           // reset timer if game continues\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const handleReady = (i) => {\r\n        const user = store.getState().user;\r\n        socket.emit(\"ready\", { userID: user.ID, roomID: props.roomID })\r\n    }\r\n\r\n\r\n    if (!history || !roomData) {\r\n        return (<CircularProgress />)\r\n    }\r\n    else {\r\n        const current = history[stepNumber];\r\n        const winner = calculateWinner(current.squares, stepNumber, current.move);\r\n\r\n        const moves = history.map((turn, i) => {\r\n            const x = Math.floor(turn.move / column);\r\n            const y = turn.move % column;\r\n\r\n            const player = (i % 2) === 0 ? \"O\" : \"X\";\r\n\r\n            const desc = i ?\r\n                'Turn ' + i + ': (' + x + ',' + y + ') - ' + player :\r\n                'Game start';\r\n\r\n            return (\r\n                <li key={i}>\r\n                    {current === turn ? <b>{desc}</b> : <>{desc}</>}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let statusDes;\r\n        const finalMoves = moves.slice().reverse();\r\n\r\n        if (roomData.winner === -1) {\r\n            if (winner.status === -1) {\r\n                statusDes = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n            }\r\n            else if (winner.status === 0) {\r\n                statusDes = 'Draw';\r\n            }\r\n            else {\r\n                statusDes = 'Winner: ' + winner.status;\r\n            }\r\n        }\r\n        else {\r\n            if (roomData.winner === 0) {\r\n                statusDes = 'Draw';\r\n            }\r\n            else {\r\n                \r\n                statusDes = 'Winner: ' + (roomData.winner === 1 ? \"X\" : \"O\");\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Box className=\"game\" >\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={8} >\r\n                        <Box width=\"95%\" height={290} overflow=\"auto\">\r\n                            <Box className=\"gameContainer\" height={squareSize * row} width={squareSize * column}>\r\n                                <Board\r\n                                    column={column}\r\n                                    row={row}\r\n                                    squares={current.squares}\r\n                                    onClick={(i) => handleClick(i, current.move)}\r\n                                    winnerLine={winner.line}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {roomData.ready && roomData.ready.hasStart &&\r\n                            (<Box className={classes.rightContainer} width=\"95%\" height={290} overflow=\"auto\">\r\n                                <Box className={classes.infoContainer}>\r\n                                    <div>\r\n                                        {winner.line\r\n                                            ? <Typography>{statusDes}</Typography>\r\n                                            : <Typography>{statusDes}</Typography>\r\n                                        }\r\n                                        <Typography>History: </Typography>\r\n                                    </div>\r\n                                </Box>\r\n                                <Box className={classes.turnContainer}>\r\n                                    <div>\r\n                                        <ol>{finalMoves}</ol>\r\n                                    </div>\r\n                                </Box>\r\n                            </Box>)\r\n                        }\r\n                        {roomData.ready && !roomData.ready.hasStart &&\r\n                            (<Box className={classes.rightContainer} width=\"95%\" height={290} overflow=\"auto\">\r\n                                <Box className={classes.readyContainer}>\r\n                                    <div>\r\n                                        <Typography>Player 1: {roomData.ready.isReady1 ? \"Ready\" : \"Not Ready\"}</Typography>\r\n                                        <Typography>Player 2: {roomData.ready.isReady2 ? \"Ready\" : \"Not Ready\"}</Typography>\r\n                                    </div>\r\n                                </Box>\r\n                                {props.isPlayer &&\r\n                                    (<Box className={classes.buttonContainer}>\r\n                                        <Button fullWidth className={classes.button} variant=\"contained\" color=\"primary\" onClick={() => handleReady()} >\r\n                                            Ready\r\n                                        </Button>\r\n                                    </Box>)\r\n                                }\r\n                            </Box>)\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Game;\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\board.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\board.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\OnlineRoomList.js",["248"],"import React, { useState } from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic'\r\n  },\r\n\r\n  timeCell: {\r\n    minWidth: '150px',\r\n    maxWidth: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  nameCell: {\r\n    minWidth: '100px',\r\n    maxWidth: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  footer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  footerRow: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-start'\r\n  },\r\n  buttonBox: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    margin: '0px 5px 0px 5px',\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst OnlineRoomList = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // table\r\n  const [selected, setSelected] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const rows = props.data;\r\n\r\n  const handleClick = (event, name) => {\r\n    if (selected === name) {\r\n      setSelected(null);\r\n      setRoomId(null);\r\n    }\r\n    else {\r\n      setSelected(name);\r\n      setRoomId(name);\r\n    }\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const emptyRows = rows ? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : 0;\r\n\r\n  // button\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [openPlayer, setOpenPlayer] = useState(false);\r\n  const [openViewer, setOpenViewer] = useState(false);\r\n  const handleClickOpenPlayer = () => {\r\n    setOpenPlayer(true);\r\n  };\r\n\r\n  const handleClosePlayer = () => {\r\n    setOpenPlayer(false);\r\n  };\r\n\r\n  const handleClickOpenViewer = () => {\r\n    setOpenViewer(true);\r\n  };\r\n\r\n  const handleCloseViewer = () => {\r\n    setOpenViewer(false);\r\n  };\r\n\r\n  const joinRoomAsPlayer = async () => {\r\n    try {\r\n      const result = await DataService.joinRoomAsPlayer(roomId);\r\n      history.push(\"/Room/\" + result.data.ID);\r\n    } catch (error) {\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      alert(resMessage)\r\n    }\r\n  }\r\n\r\n  const joinRoomAsViewer = async () => {\r\n    try {\r\n      const result = await DataService.joinRoomAsViewer(roomId);\r\n      history.push(\"/Room/\" + result.data.ID);\r\n    } catch (error) {\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      alert(resMessage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.bold}>Created</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Player 1</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Player 2</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                const isItemSelected = row.ID === selected;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row.ID)}\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.ID}\r\n                    selected={isItemSelected}>\r\n                    <TableCell component=\"th\" id={index} scope=\"row\" className={classes.timeCell}>\r\n                      <Moment fromNow>{row.dateCreate}</Moment>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.nameCell}>{row.name1}</TableCell>\r\n                    <TableCell align=\"right\" className={classes.nameCell}>{row.name2}</TableCell>\r\n                    {(row.name1 === null || row.name2 === null)\r\n                      ? <TableCell align=\"right\" className={classes.italic}>Waiting</TableCell>\r\n                      : <TableCell align=\"right\">Playing</TableCell>}\r\n                  </TableRow>\r\n                )\r\n              })\r\n              : <></>\r\n            }\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TableFooter className={classes.footer}>\r\n        <TableRow className={classes.footerRow}>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5]}\r\n            count={rows ? rows.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            component='div'\r\n            onChangePage={handleChangePage}\r\n          />\r\n          <Box className={classes.buttonBox}>\r\n            <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickOpenPlayer}>\r\n              Join\r\n        </Button>\r\n            <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickOpenViewer}>\r\n              View\r\n        </Button>\r\n            <Dialog open={openPlayer} onClose={handleClosePlayer} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">Join</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter the room's ID\r\n              </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"roomID\"\r\n                  label=\"RoomID\"\r\n                  type=\"roomID\"\r\n                  value={roomId}\r\n                  fullWidth\r\n                  onChange={e => setRoomId(e.target.value)}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClosePlayer} color=\"primary\">\r\n                  Cancel\r\n              </Button>\r\n                <Button onClick={joinRoomAsPlayer} color=\"primary\">\r\n                  Join as player\r\n              </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openViewer} onClose={handleCloseViewer} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">View</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter the room's ID or select from table\r\n              </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"roomID\"\r\n                  label=\"RoomID\"\r\n                  type=\"roomID\"\r\n                  value={roomId}\r\n                  fullWidth\r\n                  onChange={e => setRoomId(e.target.value)}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleCloseViewer} color=\"primary\">\r\n                  Cancel\r\n              </Button>\r\n                <Button onClick={joinRoomAsViewer} color=\"primary\">\r\n                  Join as viewer\r\n              </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Box>\r\n        </TableRow>\r\n      </TableFooter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default OnlineRoomList;","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Join\\Join.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Chat\\Chat.js",["249"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent\r\n} from '@material-ui/core';\r\n\r\nimport { InfoBar } from '../InforBar/InforBar';\r\nimport { Input } from '../Input/Input';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { TextContainer } from '../TextContainter/TextContainer'\r\nimport socket from \"../../../../utils/socket.service\";\r\nimport './Chat.css';\r\n\r\nexport const Chat = (props) => {\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"get_chat_data\", {roomID: props.room}, (chatData) => {\r\n            console.log(chatData);\r\n            setMessages(chatData);\r\n        });\r\n\r\n        socket.on('message', message => {\r\n            setMessages(msgs => [...msgs, message]);\r\n        });\r\n\r\n        socket.on(\"usersInRoom\", ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"message\");\r\n            socket.off(\"usersInRoom\");\r\n        }\r\n\r\n    }, []);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message) {\r\n            socket.emit('sendMessage', { message, userID: props.userID, roomID: props.room }, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"outerContainer\">\r\n            {true ? <></> :\r\n                <TextContainer users={users} />}\r\n            <div className=\"container\">\r\n                <InfoBar room={props.room} />\r\n                {props.name\r\n                    ? <>\r\n                        <Messages messages={messages} name={props.name} />\r\n                        <Input message={message} status={props.status} setMessage={setMessage} sendMessage={sendMessage} />\r\n                    </>\r\n                    : <CardContent className=\"notLogin\">Login to see chat</CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\square.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\square.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js",["250","251","252","253"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent\r\n} from '@material-ui/core';\r\n\r\nimport { InfoBar } from '../InforBar/InforBar';\r\nimport { Input } from '../Input/Input';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { TextContainer } from '../TextContainter/TextContainer'\r\nimport socket from \"../../../../utils/socket.service\";\r\nimport DataService from \"../../../../utils/data.service\";\r\nimport './Chat.css';\r\n\r\nexport const Chat = (props) => {\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await DataService.getMessage(props.room);\r\n                setMessages(res.data);\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response && error.response.data && error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                alert(resMessage);\r\n            }\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"outerContainer\">\r\n            {true ? <></> :\r\n                <TextContainer users={users} />}\r\n            <div className=\"container\">\r\n                <InfoBar room={props.room} />\r\n                {props.name\r\n                    ? <>\r\n                        <Messages messages={messages} name={props.name} />\r\n                        <Input message={message} />\r\n                    </>\r\n                    : <CardContent className=\"notLogin\">Login to see chat</CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\TextContainter\\TextContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Messages.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Input\\Input.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\InforBar\\InforBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Message\\Message.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js",["254","255"],"import React from 'react';\r\n\r\nimport './Input.css';\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport const Input = ({ message }) => (\r\n    <form className=\"form\">\r\n        <input\r\n            readOnly\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Game has end\"\r\n            value={message}\r\n        />\r\n    </form>\r\n);","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Countdown\\Countdown.js",["256","257","258","259","260"],"import React, { useEffect } from \"react\";\r\nimport {\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport config from \"../../utils/config.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    countdown: {\r\n        fontSize: '26px',\r\n    },\r\n    timeout: {\r\n        color: 'red',\r\n    }\r\n}));\r\n\r\nexport default function Countdown(props) {\r\n    const classes = useStyles();\r\n    const reset = props.reset;\r\n    const counter = props.counter;\r\n\r\n    // run countdown\r\n    useEffect(() => {\r\n        let timer;\r\n        if (counter && counter > 0) {\r\n            timer = setTimeout(() => props.setCounter(counter - 1), 1000);\r\n        }\r\n        else {\r\n            //props.timeout();\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, [counter]);\r\n\r\n    // reset countdown\r\n    useEffect(() => {\r\n        if (reset) {\r\n            props.setCounter(config[\"time-limit\"]);\r\n            props.setReset(false);\r\n        }\r\n    }, [reset]);\r\n\r\n    return (\r\n        <div className={classes.countdown}>\r\n            {counter !== 0\r\n                ?\r\n                <div className={counter <= 9 ? classes.timeout : null}>\r\n                    {counter}\r\n                </div>\r\n                :\r\n                <div className={classes.timeout}>Timeout</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ActiveAccount.js",["261"],"import React, { useState } from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ChangePass() {\r\n    const classes = useStyles();\r\n    const {uuid} = useParams();\r\n    const history = useHistory();\r\n\r\n    const activeAccountByLink = () => {\r\n        console.log(\"uuid: \" + uuid)\r\n        DataService.activeAccount(uuid);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Active Account\r\n                </Typography>\r\n                <Button\r\n                    onClick={(e) => activeAccountByLink()}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Active Your Account\r\n                </Button>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ForgotPassword.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ResetPassword.js",["262"],"import React, { useState } from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ChangePass() {\r\n    const classes = useStyles();\r\n    const {uuid} = useParams();\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [newPass2, setNewPass2] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [status, setStatus] = useState(\"error\");\r\n\r\n    const onChangeNewPass = (e) => {\r\n        setNewPass(e.target.value);\r\n    };\r\n\r\n    const onChangeNewPass2 = (e) => {\r\n        setNewPass2(e.target.value);\r\n    };\r\n\r\n    // auth\r\n    const sendMail = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n\r\n        if (newPass === \"\" || newPass2 === \"\") {\r\n            setMessage(\"All fields must not be empty\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (newPass.length > 50 || newPass2.length > 50) {\r\n            setMessage(\"All fields must not exceed 50 character\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (newPass !== newPass2) {\r\n            setMessage(\"Passwords don't match\");\r\n            setStatus(\"error\");\r\n        }\r\n        else {\r\n            try {\r\n                await DataService.resetPassword(uuid, newPass)\r\n                setMessage(\"Đã gửi thư reset password\");\r\n                setStatus(\"success\");\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setMessage(resMessage);\r\n                setStatus(\"error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Change password\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            {message && (\r\n                                <div className=\"form-group\">\r\n                                    <Alert severity={status}>\r\n                                        {message}\r\n                                    </Alert>\r\n                                </div>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass\"\r\n                                label=\"New password\"\r\n                                name=\"newPass\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass(value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass2\"\r\n                                label=\"Repeat new password\"\r\n                                name=\"newPass2\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass2(value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        onClick={(e) => sendMail(e)}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ranking.js",["263","264","265","266"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\UserProfile.js",["267","268","269","270","271","272","273"],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":14,"column":8,"nodeType":"280","messageId":"281","endLine":14,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":82,"column":6,"nodeType":"284","endLine":82,"endColumn":8,"suggestions":"285"},{"ruleId":"278","severity":1,"message":"286","line":8,"column":8,"nodeType":"280","messageId":"281","endLine":8,"endColumn":15},{"ruleId":"278","severity":1,"message":"287","line":6,"column":5,"nodeType":"280","messageId":"281","endLine":6,"endColumn":8},{"ruleId":"278","severity":1,"message":"288","line":26,"column":8,"nodeType":"280","messageId":"281","endLine":26,"endColumn":22},{"ruleId":"282","severity":1,"message":"289","line":121,"column":6,"nodeType":"284","endLine":121,"endColumn":8,"suggestions":"290"},{"ruleId":"278","severity":1,"message":"291","line":126,"column":23,"nodeType":"280","messageId":"281","endLine":126,"endColumn":37},{"ruleId":"278","severity":1,"message":"292","line":23,"column":3,"nodeType":"280","messageId":"281","endLine":23,"endColumn":20},{"ruleId":"278","severity":1,"message":"293","line":24,"column":3,"nodeType":"280","messageId":"281","endLine":24,"endColumn":14},{"ruleId":"282","severity":1,"message":"294","line":163,"column":6,"nodeType":"284","endLine":163,"endColumn":10,"suggestions":"295"},{"ruleId":"278","severity":1,"message":"296","line":191,"column":17,"nodeType":"280","messageId":"281","endLine":191,"endColumn":25},{"ruleId":"282","severity":1,"message":"297","line":199,"column":6,"nodeType":"284","endLine":199,"endColumn":13,"suggestions":"298"},{"ruleId":"278","severity":1,"message":"299","line":23,"column":8,"nodeType":"280","messageId":"281","endLine":23,"endColumn":14},{"ruleId":"278","severity":1,"message":"299","line":9,"column":8,"nodeType":"280","messageId":"281","endLine":9,"endColumn":14},{"ruleId":"278","severity":1,"message":"300","line":10,"column":8,"nodeType":"280","messageId":"281","endLine":10,"endColumn":13},{"ruleId":"278","severity":1,"message":"301","line":25,"column":12,"nodeType":"280","messageId":"281","endLine":25,"endColumn":19},{"ruleId":"278","severity":1,"message":"302","line":25,"column":21,"nodeType":"280","messageId":"281","endLine":25,"endColumn":31},{"ruleId":"282","severity":1,"message":"303","line":84,"column":8,"nodeType":"284","endLine":84,"endColumn":17,"suggestions":"304"},{"ruleId":"278","severity":1,"message":"291","line":78,"column":23,"nodeType":"280","messageId":"281","endLine":78,"endColumn":37},{"ruleId":"282","severity":1,"message":"305","line":38,"column":8,"nodeType":"284","endLine":38,"endColumn":10,"suggestions":"306"},{"ruleId":"278","severity":1,"message":"299","line":11,"column":8,"nodeType":"280","messageId":"281","endLine":11,"endColumn":14},{"ruleId":"278","severity":1,"message":"307","line":16,"column":19,"nodeType":"280","messageId":"281","endLine":16,"endColumn":27},{"ruleId":"278","severity":1,"message":"308","line":17,"column":21,"nodeType":"280","messageId":"281","endLine":17,"endColumn":31},{"ruleId":"282","severity":1,"message":"305","line":36,"column":8,"nodeType":"284","endLine":36,"endColumn":10,"suggestions":"309"},{"ruleId":"278","severity":1,"message":"310","line":4,"column":9,"nodeType":"280","messageId":"281","endLine":4,"endColumn":14},{"ruleId":"278","severity":1,"message":"311","line":5,"column":8,"nodeType":"280","messageId":"281","endLine":5,"endColumn":16},{"ruleId":"278","severity":1,"message":"312","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"313","line":3,"column":17,"nodeType":"280","messageId":"281","endLine":3,"endColumn":34},{"ruleId":"278","severity":1,"message":"299","line":6,"column":8,"nodeType":"280","messageId":"281","endLine":6,"endColumn":14},{"ruleId":"282","severity":1,"message":"314","line":32,"column":8,"nodeType":"284","endLine":32,"endColumn":17,"suggestions":"315"},{"ruleId":"282","severity":1,"message":"314","line":40,"column":8,"nodeType":"284","endLine":40,"endColumn":15,"suggestions":"316"},{"ruleId":"278","severity":1,"message":"312","line":1,"column":17,"nodeType":"280","messageId":"281","endLine":1,"endColumn":25},{"ruleId":"278","severity":1,"message":"317","line":2,"column":20,"nodeType":"280","messageId":"281","endLine":2,"endColumn":30},{"ruleId":"278","severity":1,"message":"318","line":4,"column":5,"nodeType":"280","messageId":"281","endLine":4,"endColumn":16},{"ruleId":"278","severity":1,"message":"319","line":27,"column":8,"nodeType":"280","messageId":"281","endLine":27,"endColumn":22},{"ruleId":"278","severity":1,"message":"320","line":102,"column":12,"nodeType":"280","messageId":"281","endLine":102,"endColumn":17},{"ruleId":"278","severity":1,"message":"291","line":121,"column":25,"nodeType":"280","messageId":"281","endLine":121,"endColumn":39},{"ruleId":"278","severity":1,"message":"321","line":6,"column":8,"nodeType":"280","messageId":"281","endLine":6,"endColumn":14},{"ruleId":"278","severity":1,"message":"322","line":7,"column":8,"nodeType":"280","messageId":"281","endLine":7,"endColumn":19},{"ruleId":"278","severity":1,"message":"323","line":12,"column":8,"nodeType":"280","messageId":"281","endLine":12,"endColumn":18},{"ruleId":"278","severity":1,"message":"324","line":17,"column":8,"nodeType":"280","messageId":"281","endLine":17,"endColumn":21},{"ruleId":"278","severity":1,"message":"308","line":58,"column":21,"nodeType":"280","messageId":"281","endLine":58,"endColumn":31},{"ruleId":"278","severity":1,"message":"325","line":59,"column":20,"nodeType":"280","messageId":"281","endLine":59,"endColumn":29},{"ruleId":"282","severity":1,"message":"326","line":77,"column":8,"nodeType":"284","endLine":77,"endColumn":12,"suggestions":"327"},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'FinishRoomList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.","ArrayExpression",["330"],"'Divider' is defined but never used.","'Box' is defined but never used.","'ArrowRightIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'user.ID'. Either include it or remove the dependency array.",["331"],"'setRowsPerPage' is assigned a value but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["332"],"'setLeave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isPlayer'. Either include it or remove the dependency array.",["333"],"'socket' is defined but never used.","'store' is defined but never used.","'newMove' is assigned a value but never used.","'setNewMove' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'receiveMove'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["334"],"React Hook useEffect has a missing dependency: 'props.room'. Either include it or remove the dependency array.",["335"],"'setUsers' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["336"],"'green' is defined but never used.","'SendIcon' is defined but never used.","'useState' is defined but never used.","'ServerStyleSheets' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["337"],["338"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'TableChartIcon' is defined but never used.","'users' is assigned a value but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'isPlainObject' is defined but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"350","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [history, location.search]",{"range":"359","text":"360"},"Update the dependencies array to be: [user.ID]",{"range":"361","text":"362"},"Update the dependencies array to be: [ID, user]",{"range":"363","text":"364"},"Update the dependencies array to be: [isPlayer, leave]",{"range":"365","text":"366"},"Update the dependencies array to be: [newMove, props, receiveMove]",{"range":"367","text":"368"},"Update the dependencies array to be: [props.room]",{"range":"369","text":"370"},{"range":"371","text":"370"},"Update the dependencies array to be: [counter, props]",{"range":"372","text":"373"},"Update the dependencies array to be: [props, reset]",{"range":"374","text":"375"},"Update the dependencies array to be: [ID, history]",{"range":"376","text":"377"},[2521,2523],"[history, location.search]",[2583,2585],"[user.ID]",[3839,3843],"[ID, user]",[4868,4875],"[isPlayer, leave]",[2183,2192],"[newMove, props, receiveMove]",[1102,1104],"[props.room]",[1183,1185],[826,835],"[counter, props]",[1017,1024],"[props, reset]",[2450,2454],"[ID, history]"]