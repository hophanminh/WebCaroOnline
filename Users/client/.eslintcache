[{"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\index.js":"1","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\App.js":"2","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\store.service.js":"3","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\PrivateRoute.js":"4","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\socket.service.js":"5","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\auth.service.js":"6","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\Home.js":"7","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Menu.js":"8","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\NotFound.js":"9","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\Account.js":"10","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\SignUp.js":"11","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\Login.js":"12","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ChangePass.js":"13","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\host.service.js":"14","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ListUser.js":"15","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBar.js":"16","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Topbar.js":"17","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\data.service.js":"18","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBarList.js":"19","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\title.service.js":"20","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\FinishRoomList.js":"21","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Room.js":"22","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\RoomFinish.js":"23","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\reducer\\reducer.js":"24","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\ListContainer.js":"25","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\game.js":"26","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\game.js":"27","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\index.js":"28","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\board.js":"29","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\board.js":"30","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\index.js":"31","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\OnlineRoomList.js":"32","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Join\\Join.js":"33","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Chat\\Chat.js":"34","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\square.js":"35","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\square.js":"36","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js":"37","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js":"38","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\TextContainter\\TextContainer.js":"39","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Messages.js":"40","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Input\\Input.js":"41","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\InforBar\\InforBar.js":"42","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js":"43","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js":"44","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Message\\Message.js":"45","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js":"46","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js":"47","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js":"48","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Countdown\\Countdown.js":"49","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ActiveAccount.js":"50","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ForgotPassword.js":"51","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ResetPassword.js":"52","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ranking.js":"53","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\UserProfile.js":"54"},{"size":367,"mtime":1608857798130,"results":"55","hashOfConfig":"56"},{"size":4616,"mtime":1610073738711,"results":"57","hashOfConfig":"56"},{"size":228,"mtime":1609679788104,"results":"58","hashOfConfig":"56"},{"size":513,"mtime":1608857798110,"results":"59","hashOfConfig":"56"},{"size":214,"mtime":1608857798133,"results":"60","hashOfConfig":"56"},{"size":1861,"mtime":1610025048011,"results":"61","hashOfConfig":"56"},{"size":2006,"mtime":1610025047955,"results":"62","hashOfConfig":"56"},{"size":693,"mtime":1608948953501,"results":"63","hashOfConfig":"56"},{"size":278,"mtime":1608857798124,"results":"64","hashOfConfig":"56"},{"size":5970,"mtime":1610073738751,"results":"65","hashOfConfig":"56"},{"size":7509,"mtime":1610262070473,"results":"66","hashOfConfig":"56"},{"size":6053,"mtime":1610262070514,"results":"67","hashOfConfig":"56"},{"size":6293,"mtime":1609515013986,"results":"68","hashOfConfig":"56"},{"size":231,"mtime":1610025048029,"results":"69","hashOfConfig":"56"},{"size":6439,"mtime":1610025571176,"results":"70","hashOfConfig":"56"},{"size":1812,"mtime":1608857798123,"results":"71","hashOfConfig":"56"},{"size":8628,"mtime":1609515013876,"results":"72","hashOfConfig":"56"},{"size":2332,"mtime":1610256263457,"results":"73","hashOfConfig":"56"},{"size":2041,"mtime":1610262070480,"results":"74","hashOfConfig":"56"},{"size":460,"mtime":1609515014033,"results":"75","hashOfConfig":"56"},{"size":6831,"mtime":1609515013992,"results":"76","hashOfConfig":"56"},{"size":11950,"mtime":1610261249708,"results":"77","hashOfConfig":"56"},{"size":6560,"mtime":1610258456871,"results":"78","hashOfConfig":"56"},{"size":750,"mtime":1609515014012,"results":"79","hashOfConfig":"56"},{"size":4873,"mtime":1610025047965,"results":"80","hashOfConfig":"56"},{"size":9856,"mtime":1610523203583,"results":"81","hashOfConfig":"56"},{"size":13771,"mtime":1610523090371,"results":"82","hashOfConfig":"56"},{"size":66,"mtime":1609515013910,"results":"83","hashOfConfig":"56"},{"size":979,"mtime":1609515013948,"results":"84","hashOfConfig":"56"},{"size":979,"mtime":1609515013911,"results":"85","hashOfConfig":"56"},{"size":66,"mtime":1609515013946,"results":"86","hashOfConfig":"56"},{"size":8144,"mtime":1609679788044,"results":"87","hashOfConfig":"56"},{"size":1038,"mtime":1609515013906,"results":"88","hashOfConfig":"56"},{"size":2006,"mtime":1609515013892,"results":"89","hashOfConfig":"56"},{"size":230,"mtime":1609515013964,"results":"90","hashOfConfig":"56"},{"size":230,"mtime":1609515013913,"results":"91","hashOfConfig":"56"},{"size":1038,"mtime":1609515013920,"results":"92","hashOfConfig":"56"},{"size":1780,"mtime":1609515013915,"results":"93","hashOfConfig":"56"},{"size":955,"mtime":1609515013910,"results":"94","hashOfConfig":"56"},{"size":378,"mtime":1609515013908,"results":"95","hashOfConfig":"56"},{"size":1189,"mtime":1609515013903,"results":"96","hashOfConfig":"56"},{"size":237,"mtime":1609515013896,"results":"97","hashOfConfig":"56"},{"size":955,"mtime":1609515013944,"results":"98","hashOfConfig":"56"},{"size":378,"mtime":1609515013938,"results":"99","hashOfConfig":"56"},{"size":1109,"mtime":1609515013907,"results":"100","hashOfConfig":"56"},{"size":413,"mtime":1609515013918,"results":"101","hashOfConfig":"56"},{"size":237,"mtime":1609515013917,"results":"102","hashOfConfig":"56"},{"size":1109,"mtime":1609515013921,"results":"103","hashOfConfig":"56"},{"size":1310,"mtime":1610025047788,"results":"104","hashOfConfig":"56"},{"size":2127,"mtime":1610025047984,"results":"105","hashOfConfig":"56"},{"size":4523,"mtime":1610025048000,"results":"106","hashOfConfig":"56"},{"size":5379,"mtime":1610025048009,"results":"107","hashOfConfig":"56"},{"size":9546,"mtime":1610262070486,"results":"108","hashOfConfig":"56"},{"size":6111,"mtime":1610073738757,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1lsjbq4",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"112"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"112"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"112"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"112"},"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\index.js",[],["231","232"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\App.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\store.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\PrivateRoute.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\socket.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\auth.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Menu.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\NotFound.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\Account.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\SignUp.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Authenticate\\Login.js",["233"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ChangePass.js",["234"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(4),\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ChangePass() {\r\n    const classes = useStyles();\r\n    const [oldPass, setOldPass] = useState(\"\");\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [newPass2, setNewPass2] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [status, setStatus] = useState(\"error\");\r\n\r\n    const onChangeOldPass = (e) => {\r\n        setOldPass(e.target.value);\r\n    };\r\n\r\n    const onChangeNewPass = (e) => {\r\n        setNewPass(e.target.value);\r\n    };\r\n\r\n    const onChangeNewPass2 = (e) => {\r\n        setNewPass2(e.target.value);\r\n    };\r\n\r\n    // auth\r\n    const changePass = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n\r\n\r\n\r\n        if (oldPass === \"\" || newPass === \"\" || newPass2 === \"\") {\r\n            setMessage(\"All fields must not be empty\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (oldPass.length > 50 || newPass.length > 50 || newPass2.length > 50) {\r\n            setMessage(\"All fields must not exceed 50 character\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (newPass !== newPass2) {\r\n            setMessage(\"Passwords don't match\");\r\n            setStatus(\"error\");\r\n        }\r\n        else {\r\n            try {\r\n                await DataService.changePassword(oldPass, newPass)\r\n                setMessage(\"Thanh đổi thành công\");\r\n                setStatus(\"success\");\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setMessage(resMessage);\r\n                setStatus(\"error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth='xs' className={classes.container}>\r\n            <CssBaseline />\r\n            <Card className={classes.card}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Change password\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            {message && (\r\n                                <div className=\"form-group\">\r\n                                    <Alert severity={status}>\r\n                                        {message}\r\n                                    </Alert>\r\n                                </div>\r\n                            )}\r\n\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"oldPass\"\r\n                                label=\"Old password\"\r\n                                name=\"oldPass\"\r\n                                type=\"password\"\r\n                                autoFocus\r\n                                onChange={(value) => onChangeOldPass(value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass\"\r\n                                label=\"New password\"\r\n                                name=\"newPass\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass(value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass2\"\r\n                                label=\"Repeat new password\"\r\n                                name=\"newPass2\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass2(value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        onClick={(e) => changePass(e)}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change password\r\n          </Button>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\host.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ListUser.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\Topbar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\data.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Menu\\SideBarList.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\utils\\title.service.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\FinishRoomList.js",["235","236"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Container,\r\n  CssBaseline,\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  Card,\r\n  Divider,\r\n  Typography,\r\n  Avatar,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport TableChartIcon from '@material-ui/icons/TableChart';\r\nimport DataService from \"../../utils/data.service\";\r\nimport store from '../../utils/store.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(4),\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    borderTop: '1px solid #999'\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic'\r\n  },\r\n\r\n  timeCell: {\r\n    minWidth: '150px',\r\n    maxWidth: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  nameCell: {\r\n    minWidth: '100px',\r\n    maxWidth: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  footer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  footerRow: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-start'\r\n  },\r\n  buttonBox: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    margin: '0px 5px 0px 5px',\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst FinishRoomList = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [data, setData] = useState();\r\n  const [user, setUser] = useState(store.getState().user);\r\n  store.subscribe(() => {\r\n    setUser(store.getState().user);\r\n  });\r\n\r\n  // get initial data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await DataService.getFinishRoomList(user.ID);\r\n        setData(res.data);\r\n      }\r\n      catch (error) {\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        alert(resMessage);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  // table\r\n  const [selected, setSelected] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const rows = data;\r\n\r\n  const handleClick = (event, name) => {\r\n    if (selected === name) {\r\n      setSelected(null);\r\n      setRoomId(null);\r\n    }\r\n    else {\r\n      setSelected(name);\r\n      setRoomId(name);\r\n    }\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const emptyRows = rows ? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : 0;\r\n\r\n  // button\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const handleClickViewer = () => {\r\n    history.push(\"/History/Room/\" + roomId);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth={false} className={classes.container}>\r\n      <CssBaseline />\r\n      <Card className={classes.card}>\r\n        <Avatar className={classes.avatar}>\r\n          <TableChartIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Game History\r\n        </Typography>\r\n        <Divider />\r\n        <TableContainer className={classes.form}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className={classes.bold}>Created</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Player 1</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Player 2</TableCell>\r\n                <TableCell className={classes.bold} align=\"right\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                  const isItemSelected = row.ID === selected;\r\n                  \r\n                  const isPlayer1 = row.name1 === user.name ? 1 : 2;\r\n                  let isWin = null;\r\n                  if (row.winner === 0) {\r\n                    isWin = \"Draw\"\r\n                  }\r\n                  else if (isPlayer1 === row.winner) {\r\n                    isWin = \"Won\"\r\n                  }\r\n                  else if (isPlayer1 !== row.winner) {\r\n                    isWin = \"Lost\"\r\n                  }\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.ID)}\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.ID}\r\n                      selected={isItemSelected}>\r\n                      <TableCell component=\"th\" id={index} scope=\"row\" className={classes.timeCell}>\r\n                        <Moment fromNow>{row.dateCreate}</Moment>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\" className={classes.nameCell}>{row.name1}</TableCell>\r\n                      <TableCell align=\"right\" className={classes.nameCell}>{row.name2}</TableCell>\r\n                      <TableCell align=\"right\" className={classes.bold}>{isWin}</TableCell>\r\n                    </TableRow>\r\n                  )\r\n                })\r\n                : <></>\r\n              }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TableFooter className={classes.footer}>\r\n          <TableRow className={classes.footerRow}>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5]}\r\n              count={rows ? rows.length : 0}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              component='div'\r\n              onChangePage={handleChangePage}\r\n            />\r\n            <Box className={classes.buttonBox}>\r\n              <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickViewer}>\r\n                View\r\n            </Button>\r\n            </Box>\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FinishRoomList;","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Room.js",["237","238","239","240","241"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useParams,\r\n  Prompt\r\n} from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  Tooltip,\r\n  Box,\r\n  Snackbar,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n\r\n} from '@material-ui/core';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaTrophy, FaHandshake, FaInfoCircle } from \"react-icons/fa\";\r\nimport FlagOutlinedIcon from '@material-ui/icons/FlagOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport Game from './Game/game';\r\nimport Countdown from '../Countdown/Countdown'\r\nimport { Chat } from './ChatOnline/'\r\nimport socket from \"../../utils/socket.service\";\r\nimport store from '../../utils/store.service';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n  container: {\r\n    marginTop: '20px',\r\n    marginBottom: '80px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  playerName: {\r\n    maxWidth: \"100%\",\r\n    wordWrap: 'break-word',\r\n  },\r\n  leftGrid: {\r\n    minWidth: '434px',\r\n    minHeight: '440px',\r\n  },\r\n  rightGrid: {\r\n    minHeight: '440px',\r\n  },\r\n  winColor: {\r\n    color: \"green\",\r\n  },\r\n  drawColor: {\r\n    color: \"red\",\r\n  },\r\n  topButtonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: 'flex-end ',\r\n  },\r\n  topButton: {\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    borderRight: '1px solid #fff',\r\n    borderRadius: '0px'\r\n  },\r\n  nameContainerLeft: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    flexWrap: 'wrap',\r\n  },\r\n  nameContainerRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n  },\r\n  countdown: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n  },\r\n  trophyIcon: {\r\n    margin: '0 5px'\r\n  },\r\n  trophyCount: {\r\n    fontSize: '14px',\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nexport default function Room(props) {\r\n  const classes = useStyles();\r\n  const ID = useParams().id;\r\n  const [room, setRoom] = useState();                   // room's data\r\n  const [gameData, setGameData] = useState();           //game's data\r\n  const [user, setUser] = useState(store.getState().user);\r\n  store.subscribe(() => {\r\n    setUser(store.getState().user);\r\n    if (user && room && (room.idUser1 === user.ID || room.idUser2 === user.ID)) {\r\n      setIsPlayer(true)\r\n    }\r\n  });\r\n  const [isPlayer, setIsPlayer] = useState(false);\r\n\r\n  // join room\r\n  useEffect(() => {\r\n    if (user) {\r\n      socket.emit('join', { userID: user.ID, name: user.name, room: ID }, (error) => {\r\n        if (error) {\r\n          alert(error);\r\n        }\r\n      });\r\n    }\r\n  }, [ID, user]);\r\n\r\n  // get room data\r\n  useEffect(() => {\r\n    socket.emit(\"get_room_data\", { ID }, ({ data, gameData }) => {\r\n      setCounter(data[0].remain);\r\n      setRoom(data[0]);\r\n      setGameData(gameData);\r\n      if (user && (data[0].idUser1 === user.ID || data[0].idUser2 === user.ID)) {\r\n        setIsPlayer(true);\r\n      }\r\n    });\r\n\r\n    socket.on('roomData', (data) => {\r\n      setCounter(data[0].remain);\r\n      setRoom(data[0]);\r\n    });\r\n\r\n    return () => {\r\n      console.log(user)\r\n      if (user) {\r\n        socket.emit(\"leave_room\", { userID: user.ID, roomID: ID })\r\n      }\r\n      socket.off(\"roomData\");\r\n    }\r\n  }, [ID]);\r\n\r\n  // copy ID room to clipboard\r\n  const [open, setOpen] = useState(false);      // show snackbar of copy link\r\n  const copyLink = () => {\r\n    const link = ID;\r\n    // create temporary DOM to hold link, copy to clipboard then remove it\r\n    const dummy = document.createElement('input');\r\n    dummy.value = link;\r\n    document.body.appendChild(dummy);\r\n    dummy.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(dummy);\r\n\r\n    setOpen(true);\r\n    socket.emit(\"timeout\", { userID1: room.idUser1, userID2: null, roomID: ID });\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // countdown\r\n  const [resetCountdown, setResetCountdown] = useState(false);                   // room's data\r\n  const [counter, setCounter] = useState(null);\r\n\r\n\r\n  // leave room\r\n  const [leave, setLeave] = useState(true);\r\n  useEffect(() => {\r\n    if (leave && isPlayer) {\r\n      window.onbeforeunload = () => \"\"\r\n    }\r\n    else {\r\n      window.onbeforeunload = undefined\r\n    }\r\n  }, [leave]);\r\n\r\n  // ask for draw\r\n  const [askDraw, setAskDraw] = useState(false);\r\n  const handleAskDraw = () => {\r\n    socket.emit(\"ask_draw\", { userID: user.ID, roomID: ID });\r\n  }\r\n  const handleCloseAskDraw = () => {\r\n    setAskDraw(false);\r\n  };\r\n  const handleAcceptAskDraw = () => {\r\n    socket.emit(\"accept_ask_draw\", { userID: user.ID, roomID: ID });\r\n    setAskDraw(false);\r\n  };\r\n\r\n  useEffect(() => {           /// wait for ask draw\r\n    if (user && isPlayer) {\r\n      socket.on(\"waiting_ask_draw\", ({ userID }) => {\r\n        if (user.ID !== userID) {\r\n          setAskDraw(true);\r\n        }\r\n      });\r\n      return () => socket.off(\"waiting_ask_draw\");\r\n    }\r\n  }, [user, isPlayer]);\r\n\r\n  // resign\r\n  const [resign, setResign] = useState(false);\r\n  const handleOpenResign = () => {\r\n    setResign(true);\r\n  }\r\n  const handleCloseResign = () => {\r\n    setResign(false);\r\n  }\r\n  const handleResign = () => {\r\n    socket.emit(\"resign\", { userID: user.ID, roomID: ID });\r\n    setResign(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Prompt\r\n        when={leave && isPlayer}\r\n        message='You are leaving current room. Are you sure ?'\r\n      />\r\n      <Dialog open={resign} onClose={handleCloseResign} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          Are you sure you want to resign ?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseResign} color=\"primary\">\r\n            Cancel\r\n              </Button>\r\n          <Button onClick={handleResign} color=\"primary\">\r\n            Resign\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        open={askDraw}\r\n        onClose={() => handleCloseAskDraw()}\r\n        message=\"Your opponent asked for draw. \"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleAcceptAskDraw}>\r\n              <CheckIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseAskDraw}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          {user\r\n            ?\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={8} xs={12} className={classes.leftGrid} >\r\n                <Card>\r\n                  <Box className={classes.topButtonContainer}>\r\n                    {isPlayer && room.winner === -1 &&\r\n                      (<Tooltip title=\"Ask for draw\" aria-label=\"Ask for draw\">\r\n                        <IconButton disabled={!(room.ready && room.ready.hasStart)} className={classes.topButton} size=\"small\" onClick={() => handleAskDraw()}>\r\n                          <FaHandshake></FaHandshake>\r\n                        </IconButton>\r\n                      </Tooltip>)\r\n                    }\r\n                    {isPlayer && room.winner === -1 &&\r\n                      (<Tooltip title=\"Resign\" aria-label=\"Resign\">\r\n                        <IconButton disabled={!(room.ready && room.ready.hasStart)} className={classes.topButton} size=\"small\" onClick={() => handleOpenResign()}>\r\n                          <FlagOutlinedIcon></FlagOutlinedIcon>\r\n                        </IconButton>\r\n                      </Tooltip>)\r\n                    }\r\n                    <Tooltip title=\"Get room's ID\" aria-label=\"Get room's ID\">\r\n                      <IconButton className={classes.topButton} size=\"small\" onClick={() => copyLink()}>\r\n                        <FaInfoCircle></FaInfoCircle>\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Snackbar\r\n                      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                      open={open}\r\n                      onClose={handleCloseSnackbar}\r\n                      message=\"ID copied to clipboard\"\r\n                    />\r\n                  </Box>\r\n                  <CardContent>\r\n                    {room\r\n                      ?\r\n                      <Grid container spacing={3} >\r\n                        <Grid container item xs={4} className={classes.nameContainerLeft} zeroMinWidth>\r\n                          <Typography variant=\"h5\" noWrap className={room.winner === 1 ? classes.winColor : null}>{room.name1 ? \"(X) \" + room.name1 : \"(X) Waiting\"}</Typography>\r\n                          <Box className={classes.trophyCount}>\r\n                            <IconContext.Provider value={{ color: '#e5c100' }}>\r\n                              <FaTrophy className={classes.trophyIcon} />\r\n                            </IconContext.Provider>\r\n                            <Typography noWrap> - {room.name1 ? room.score1 : 0}</Typography>\r\n                          </Box>\r\n                        </Grid>\r\n                        <Grid container item xs={4} className={classes.countdown}>\r\n                          {room.winner === -1 && <Countdown counter={counter} setCounter={setCounter} reset={resetCountdown} setReset={setResetCountdown} />}\r\n                          {room.winner === 0 && <Typography className={classes.drawColor} variant=\"h5\">Draw</Typography>}\r\n                          {(room.winner !== 0 && room.winner !== -1) && <Typography variant=\"h5\">VS</Typography>}\r\n                        </Grid>\r\n                        <Grid container item xs={4} className={classes.nameContainerRight} zeroMinWidth>\r\n                          <Typography variant=\"h5\" noWrap className={room.winner === 2 ? classes.winColor : null}>{room.name2 ? \"(O) \" + room.name2 : \"(O) Waiting\"}</Typography>\r\n                          <Box className={classes.trophyCount}>\r\n                            <Typography noWrap>{room.name2 ? room.score2 : 0} - </Typography>\r\n                            <IconContext.Provider value={{ color: '#FFD700' }}>\r\n                              <FaTrophy className={classes.trophyIcon} />\r\n                            </IconContext.Provider>\r\n                          </Box>\r\n                        </Grid>\r\n\r\n                      </Grid>\r\n                      : <></>\r\n                    }\r\n                    <Divider />\r\n                    <Game roomID={ID} roomData={room} gameData={gameData} reset={resetCountdown} isPlayer={isPlayer} setReset={setResetCountdown} />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n              <Grid item sm={4} xs={12} className={classes.rightGrid} >\r\n                {user\r\n                  ? <Chat userID={user.ID} name={user.name} room={ID} status={room ? room.winner : null} />\r\n                  : <Chat name={null} room={ID} />}\r\n              </Grid>\r\n            </Grid>\r\n            :\r\n            <CircularProgress />\r\n          }\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\RoomFinish.js",["242"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  Divider,\r\n  CardContent,\r\n  Box,\r\n  Tooltip,\r\n  Snackbar,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaTrophy, FaInfoCircle } from \"react-icons/fa\";\r\n\r\nimport Game from './Game/game';\r\nimport { Chat } from './ChatOnline'\r\nimport socket from \"../../utils/socket.service\";\r\nimport store from '../../utils/store.service';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    overflow: 'auto',\r\n    marginTop: '20px',\r\n  },\r\n  container: {\r\n    marginTop: '20px',\r\n    marginBottom: '80px',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  playerName: {\r\n    maxWidth: \"100%\",\r\n    wordWrap: 'break-word',\r\n  },\r\n  gridHeight: {\r\n    minHeight: '440px',\r\n    maxHeight: \"440px\",\r\n  },\r\n  winColor: {\r\n    color: \"green\",\r\n  },\r\n  shareButtonContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row-reverse\",\r\n  },\r\n  topButton: {\r\n    marginLeft: '5px',\r\n    marginRight: '5px',\r\n    borderRight: '1px solid #fff',\r\n    borderRadius: '0px'\r\n  },\r\n  nameContainerLeft: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'flex-start',\r\n  },\r\n  nameContainerRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: 'flex-end',\r\n  },\r\n  trophyIcon: {\r\n    margin: '0 5px'\r\n  },\r\n  trophyCount: {\r\n    fontSize: '14px',\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nexport default function RoomFinish(props) {\r\n  const classes = useStyles();\r\n  const ID = useParams().id;\r\n  const [room, setRoom] = useState();                   // room's data\r\n  const [gameData, setGameData] = useState();           //game's data\r\n  const [user, setUser] = useState(store.getState().user);\r\n  const [open, setOpen] = useState(false);             // snackbar's status\r\n  store.subscribe(() => {\r\n    setUser(store.getState().user);\r\n  });\r\n\r\n  // get room data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await DataService.getFinishRoom(ID);\r\n        setRoom(res.data.data[0]);\r\n        setGameData(res.data.gameData);\r\n      }\r\n      catch (error) {\r\n        const resMessage =\r\n          (error.response && error.response.data && error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n        alert(resMessage);\r\n      }\r\n    }\r\n    fetchData();\r\n\r\n  }, [ID]);\r\n\r\n  // copy ID room to clipboard\r\n  const copyLink = () => {\r\n\r\n    const link = ID;\r\n    // create temporary DOM to hold link, copy to clipboard then remove it\r\n    const dummy = document.createElement('input');\r\n    dummy.value = link;\r\n    document.body.appendChild(dummy);\r\n    dummy.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(dummy);\r\n\r\n    // show alert\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.appBarSpacer} />\r\n      <Container maxWidth=\"lg\" className={classes.container}>\r\n        <Grid container spacing={3}>\r\n          <Grid item sm={8} xs={12} className={classes.gridHeight} >\r\n            <Card>\r\n              <Box className={classes.shareButtonContainer}>\r\n                <Tooltip title=\"Get room's ID\" aria-label=\"Get room's ID\">\r\n                  <IconButton className={classes.topButton} size=\"small\" onClick={() => copyLink()}>\r\n                    <FaInfoCircle></FaInfoCircle>\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Snackbar\r\n                  anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                  open={open}\r\n                  onClose={handleCloseSnackbar}\r\n                  message=\"ID copied to clipboard\"\r\n                />\r\n              </Box>\r\n              <CardContent>\r\n                {room\r\n                  ?\r\n                  <Grid container spacing={3} >\r\n                    <Grid container item xs={4} className={classes.nameContainerLeft} zeroMinWidth>\r\n                      <Typography variant=\"h5\" noWrap className={room.winner === 1 ? classes.winColor : null}>{room.name1 ? \"(X) \" + room.name1 : \"(X) Waiting\"}</Typography>\r\n                      {room.name1\r\n                        ? <Box className={classes.trophyCount}>\r\n                          <IconContext.Provider value={{ color: '#e5c100' }}>\r\n                            <FaTrophy className={classes.trophyIcon} />\r\n                          </IconContext.Provider>\r\n                          <Typography noWrap className={null}> - {room.score1}</Typography>\r\n                        </Box>\r\n                        : <></>}\r\n                    </Grid>\r\n                    <Grid container item xs={4} justify=\"center\">\r\n                      <Typography variant=\"h5\">VS</Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={4} className={classes.nameContainerRight} zeroMinWidth>\r\n                      <Typography variant=\"h5\" noWrap className={room.winner === 2 ? classes.winColor : null}>{room.name2 ? \"(O) \" + room.name2 : \"(O) Waiting\"}</Typography>\r\n                      {room.name2\r\n                        ? <Box className={classes.trophyCount}>\r\n                          <Typography noWrap className={null}>{room.score2} - </Typography>\r\n                          <IconContext.Provider value={{ color: '#FFD700' }}>\r\n                            <FaTrophy className={classes.trophyIcon} />\r\n                          </IconContext.Provider>\r\n                        </Box>\r\n                        : <></>}\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                  : <></>\r\n                }\r\n                <Divider />\r\n                <Game roomID={ID} roomData={room} gameData={gameData} />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item sm={4} xs={12} className={classes.gridHeight} >\r\n            {user\r\n              ? <Chat userID={user.ID} name={user.name} room={ID} />\r\n              : <Chat userID={null} name={null} room={ID} />}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\reducer\\reducer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\ListContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\game.js",["243","244","245","246"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\game.js",["247"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\board.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\board.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\index.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Home\\OnlineRoomList.js",["248"],"import React, { useState } from 'react';\r\nimport {\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TableFooter,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bold: {\r\n    fontWeight: 'bold'\r\n  },\r\n  italic: {\r\n    fontStyle: 'italic'\r\n  },\r\n\r\n  timeCell: {\r\n    minWidth: '150px',\r\n    maxWidth: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  nameCell: {\r\n    minWidth: '100px',\r\n    maxWidth: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  footer: {\r\n    width: '100%',\r\n    display: 'flex',\r\n  },\r\n  footerRow: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-start'\r\n  },\r\n  buttonBox: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  button: {\r\n    margin: '0px 5px 0px 5px',\r\n  },\r\n\r\n\r\n}));\r\n\r\nconst OnlineRoomList = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // table\r\n  const [selected, setSelected] = useState();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const rows = props.data;\r\n\r\n  const handleClick = (event, name) => {\r\n    if (selected === name) {\r\n      setSelected(null);\r\n      setRoomId(null);\r\n    }\r\n    else {\r\n      setSelected(name);\r\n      setRoomId(name);\r\n    }\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const emptyRows = rows ? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : 0;\r\n\r\n  // button\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [openPlayer, setOpenPlayer] = useState(false);\r\n  const [openViewer, setOpenViewer] = useState(false);\r\n  const handleClickOpenPlayer = () => {\r\n    setOpenPlayer(true);\r\n  };\r\n\r\n  const handleClosePlayer = () => {\r\n    setOpenPlayer(false);\r\n  };\r\n\r\n  const handleClickOpenViewer = () => {\r\n    setOpenViewer(true);\r\n  };\r\n\r\n  const handleCloseViewer = () => {\r\n    setOpenViewer(false);\r\n  };\r\n\r\n  const joinRoomAsPlayer = async () => {\r\n    try {\r\n      const result = await DataService.joinRoomAsPlayer(roomId);\r\n      history.push(\"/Room/\" + result.data.ID);\r\n    } catch (error) {\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      alert(resMessage)\r\n    }\r\n  }\r\n\r\n  const joinRoomAsViewer = async () => {\r\n    try {\r\n      const result = await DataService.joinRoomAsViewer(roomId);\r\n      history.push(\"/Room/\" + result.data.ID);\r\n    } catch (error) {\r\n      const resMessage =\r\n        (error.response && error.response.data && error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      alert(resMessage)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableContainer>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.bold}>Created</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Player 1</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Player 2</TableCell>\r\n              <TableCell className={classes.bold} align=\"right\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                const isItemSelected = row.ID === selected;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    onClick={(event) => handleClick(event, row.ID)}\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.ID}\r\n                    selected={isItemSelected}>\r\n                    <TableCell component=\"th\" id={index} scope=\"row\" className={classes.timeCell}>\r\n                      <Moment fromNow>{row.dateCreate}</Moment>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" className={classes.nameCell}>{row.name1}</TableCell>\r\n                    <TableCell align=\"right\" className={classes.nameCell}>{row.name2}</TableCell>\r\n                    {(row.name1 === null || row.name2 === null)\r\n                      ? <TableCell align=\"right\" className={classes.italic}>Waiting</TableCell>\r\n                      : <TableCell align=\"right\">Playing</TableCell>}\r\n                  </TableRow>\r\n                )\r\n              })\r\n              : <></>\r\n            }\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TableFooter className={classes.footer}>\r\n        <TableRow className={classes.footerRow}>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5]}\r\n            count={rows ? rows.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            component='div'\r\n            onChangePage={handleChangePage}\r\n          />\r\n          <Box className={classes.buttonBox}>\r\n            <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickOpenPlayer}>\r\n              Join\r\n        </Button>\r\n            <Button size='small' className={classes.button} variant=\"contained\" color=\"primary\" onClick={handleClickOpenViewer}>\r\n              View\r\n        </Button>\r\n            <Dialog open={openPlayer} onClose={handleClosePlayer} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">Join</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter the room's ID\r\n              </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"roomID\"\r\n                  label=\"RoomID\"\r\n                  type=\"roomID\"\r\n                  value={roomId}\r\n                  fullWidth\r\n                  onChange={e => setRoomId(e.target.value)}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClosePlayer} color=\"primary\">\r\n                  Cancel\r\n              </Button>\r\n                <Button onClick={joinRoomAsPlayer} color=\"primary\">\r\n                  Join as player\r\n              </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog open={openViewer} onClose={handleCloseViewer} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">View</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>\r\n                  Enter the room's ID or select from table\r\n              </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"roomID\"\r\n                  label=\"RoomID\"\r\n                  type=\"roomID\"\r\n                  value={roomId}\r\n                  fullWidth\r\n                  onChange={e => setRoomId(e.target.value)}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleCloseViewer} color=\"primary\">\r\n                  Cancel\r\n              </Button>\r\n                <Button onClick={joinRoomAsViewer} color=\"primary\">\r\n                  Join as viewer\r\n              </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Box>\r\n        </TableRow>\r\n      </TableFooter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default OnlineRoomList;","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Join\\Join.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Chat\\Chat.js",["249"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent\r\n} from '@material-ui/core';\r\n\r\nimport { InfoBar } from '../InforBar/InforBar';\r\nimport { Input } from '../Input/Input';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { TextContainer } from '../TextContainter/TextContainer'\r\nimport socket from \"../../../../utils/socket.service\";\r\nimport './Chat.css';\r\n\r\nexport const Chat = (props) => {\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.emit(\"get_chat_data\", {roomID: props.room}, (chatData) => {\r\n            console.log(chatData);\r\n            setMessages(chatData);\r\n        });\r\n\r\n        socket.on('message', message => {\r\n            setMessages(msgs => [...msgs, message]);\r\n        });\r\n\r\n        socket.on(\"usersInRoom\", ({ users }) => {\r\n            setUsers(users);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"message\");\r\n            socket.off(\"usersInRoom\");\r\n        }\r\n\r\n    }, []);\r\n\r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message) {\r\n            socket.emit('sendMessage', { message, userID: props.userID, roomID: props.room }, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"outerContainer\">\r\n            {true ? <></> :\r\n                <TextContainer users={users} />}\r\n            <div className=\"container\">\r\n                <InfoBar room={props.room} />\r\n                {props.name\r\n                    ? <>\r\n                        <Messages messages={messages} name={props.name} />\r\n                        <Input message={message} status={props.status} setMessage={setMessage} sendMessage={sendMessage} />\r\n                    </>\r\n                    : <CardContent className=\"notLogin\">Login to see chat</CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\Game\\square.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\Game\\square.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Join\\Join.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Chat\\Chat.js",["250","251","252","253"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent\r\n} from '@material-ui/core';\r\n\r\nimport { InfoBar } from '../InforBar/InforBar';\r\nimport { Input } from '../Input/Input';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { TextContainer } from '../TextContainter/TextContainer'\r\nimport socket from \"../../../../utils/socket.service\";\r\nimport DataService from \"../../../../utils/data.service\";\r\nimport './Chat.css';\r\n\r\nexport const Chat = (props) => {\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await DataService.getMessage(props.room);\r\n                setMessages(res.data);\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response && error.response.data && error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                alert(resMessage);\r\n            }\r\n        }\r\n        fetchData();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Card className=\"outerContainer\">\r\n            {true ? <></> :\r\n                <TextContainer users={users} />}\r\n            <div className=\"container\">\r\n                <InfoBar room={props.room} />\r\n                {props.name\r\n                    ? <>\r\n                        <Messages messages={messages} name={props.name} />\r\n                        <Input message={message} />\r\n                    </>\r\n                    : <CardContent className=\"notLogin\">Login to see chat</CardContent>\r\n                }\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\TextContainter\\TextContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Messages.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Input\\Input.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\InforBar\\InforBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\TextContainter\\TextContainer.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Messages.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomCurrent\\ChatOnline\\Messages\\Message\\Message.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Input\\Input.js",["254","255"],"import React from 'react';\r\n\r\nimport './Input.css';\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nexport const Input = ({ message }) => (\r\n    <form className=\"form\">\r\n        <input\r\n            readOnly\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Game has end\"\r\n            value={message}\r\n        />\r\n    </form>\r\n);","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\InforBar\\InforBar.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\RoomFinish\\ChatOnline\\Messages\\Message\\Message.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\Countdown\\Countdown.js",["256","257","258","259","260"],"import React, { useEffect } from \"react\";\r\nimport {\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport config from \"../../utils/config.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    countdown: {\r\n        fontSize: '26px',\r\n    },\r\n    timeout: {\r\n        color: 'red',\r\n    }\r\n}));\r\n\r\nexport default function Countdown(props) {\r\n    const classes = useStyles();\r\n    const reset = props.reset;\r\n    const counter = props.counter;\r\n\r\n    // run countdown\r\n    useEffect(() => {\r\n        let timer;\r\n        if (counter && counter > 0) {\r\n            timer = setTimeout(() => props.setCounter(counter - 1), 1000);\r\n        }\r\n        else {\r\n            //props.timeout();\r\n        }\r\n        return () => clearTimeout(timer);\r\n    }, [counter]);\r\n\r\n    // reset countdown\r\n    useEffect(() => {\r\n        if (reset) {\r\n            props.setCounter(config[\"time-limit\"]);\r\n            props.setReset(false);\r\n        }\r\n    }, [reset]);\r\n\r\n    return (\r\n        <div className={classes.countdown}>\r\n            {counter !== 0\r\n                ?\r\n                <div className={counter <= 9 ? classes.timeout : null}>\r\n                    {counter}\r\n                </div>\r\n                :\r\n                <div className={classes.timeout}>Timeout</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ActiveAccount.js",["261"],"import React, { useState } from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ChangePass() {\r\n    const classes = useStyles();\r\n    const {uuid} = useParams();\r\n    const history = useHistory();\r\n\r\n    const activeAccountByLink = () => {\r\n        console.log(\"uuid: \" + uuid)\r\n        DataService.activeAccount(uuid);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Active Account\r\n                </Typography>\r\n                <Button\r\n                    onClick={(e) => activeAccountByLink()}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Active Your Account\r\n                </Button>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ForgotPassword.js",[],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\ResetPassword.js",["262"],"import React, { useState } from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function ChangePass() {\r\n    const classes = useStyles();\r\n    const {uuid} = useParams();\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [newPass2, setNewPass2] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [status, setStatus] = useState(\"error\");\r\n\r\n    const onChangeNewPass = (e) => {\r\n        setNewPass(e.target.value);\r\n    };\r\n\r\n    const onChangeNewPass2 = (e) => {\r\n        setNewPass2(e.target.value);\r\n    };\r\n\r\n    // auth\r\n    const sendMail = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n\r\n        if (newPass === \"\" || newPass2 === \"\") {\r\n            setMessage(\"All fields must not be empty\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (newPass.length > 50 || newPass2.length > 50) {\r\n            setMessage(\"All fields must not exceed 50 character\");\r\n            setStatus(\"error\");\r\n        }\r\n        else if (newPass !== newPass2) {\r\n            setMessage(\"Passwords don't match\");\r\n            setStatus(\"error\");\r\n        }\r\n        else {\r\n            try {\r\n                await DataService.resetPassword(uuid, newPass)\r\n                setMessage(\"Đã gửi thư reset password\");\r\n                setStatus(\"success\");\r\n            }\r\n            catch (error) {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n\r\n                setMessage(resMessage);\r\n                setStatus(\"error\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Change password\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            {message && (\r\n                                <div className=\"form-group\">\r\n                                    <Alert severity={status}>\r\n                                        {message}\r\n                                    </Alert>\r\n                                </div>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass\"\r\n                                label=\"New password\"\r\n                                name=\"newPass\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass(value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"newPass2\"\r\n                                label=\"Repeat new password\"\r\n                                name=\"newPass2\"\r\n                                type=\"password\"\r\n                                onChange={(value) => onChangeNewPass2(value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        onClick={(e) => sendMail(e)}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Change password\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\ranking.js",["263","264","265","266","267","268"],"C:\\Users\\MY PC\\Desktop\\Github repose\\WebCaroOnline\\Users\\client\\src\\components\\User\\UserProfile.js",["269","270","271","272","273","274","275"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    useParams, useHistory,\r\n} from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DataService from \"../../utils/data.service\";\r\nimport FinishRoomList from \"./FinishRoomList\";\r\nimport isPlainObject from \"react-redux/lib/utils/isPlainObject\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        overflow: 'auto',\r\n        marginTop: '20px',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nexport default function Account() {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [status, setStatus] = useState(\"error\");\r\n\r\n    const ID = useParams().id;\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const res = await DataService.getUserByUserId(ID);\r\n                setUsername(res.data[0].username);\r\n                setEmail(res.data[0].email);\r\n                setFullname(res.data[0].fullname);\r\n            }\r\n            catch (error) {\r\n                history.back();\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [ID])\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>\r\n                <Grid container spacing={3} >\r\n                    <Grid item sm={8} xs={12} >\r\n                        <div className={classes.paper}>\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <form className={classes.form} noValidate>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12}>\r\n                                        {message && (\r\n                                            <div className=\"form-group\">\r\n                                                <Alert severity={status}>\r\n                                                    {message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        )}\r\n                                        <TextField\r\n                                            autoComplete=\"username\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            value={username}\r\n                                            id=\"username\"\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            autoFocus\r\n                                            disabled\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            autoComplete=\"fname\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            value={fullname}\r\n                                            id=\"fullname\"\r\n                                            label=\"Full Name\"\r\n                                            name=\"fullname\"\r\n                                            disabled\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            value={email}\r\n                                            id=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            name=\"email\"\r\n                                            autoComplete=\"email\"\r\n                                            disabled\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item sm={8} xs={12} >\r\n                        Matches History\r\n                        <FinishRoomList />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </main>\r\n    );\r\n}",{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":81,"column":6,"nodeType":"282","endLine":81,"endColumn":8,"suggestions":"283"},{"ruleId":"284","severity":1,"message":"285","line":8,"column":8,"nodeType":"286","messageId":"287","endLine":8,"endColumn":15},{"ruleId":"280","severity":1,"message":"288","line":120,"column":6,"nodeType":"282","endLine":120,"endColumn":8,"suggestions":"289"},{"ruleId":"284","severity":1,"message":"290","line":125,"column":23,"nodeType":"286","messageId":"287","endLine":125,"endColumn":37},{"ruleId":"284","severity":1,"message":"291","line":23,"column":3,"nodeType":"286","messageId":"287","endLine":23,"endColumn":20},{"ruleId":"284","severity":1,"message":"292","line":24,"column":3,"nodeType":"286","messageId":"287","endLine":24,"endColumn":14},{"ruleId":"280","severity":1,"message":"293","line":163,"column":6,"nodeType":"282","endLine":163,"endColumn":10,"suggestions":"294"},{"ruleId":"284","severity":1,"message":"295","line":191,"column":17,"nodeType":"286","messageId":"287","endLine":191,"endColumn":25},{"ruleId":"280","severity":1,"message":"296","line":199,"column":6,"nodeType":"282","endLine":199,"endColumn":13,"suggestions":"297"},{"ruleId":"284","severity":1,"message":"298","line":23,"column":8,"nodeType":"286","messageId":"287","endLine":23,"endColumn":14},{"ruleId":"284","severity":1,"message":"298","line":9,"column":8,"nodeType":"286","messageId":"287","endLine":9,"endColumn":14},{"ruleId":"284","severity":1,"message":"299","line":10,"column":8,"nodeType":"286","messageId":"287","endLine":10,"endColumn":13},{"ruleId":"284","severity":1,"message":"300","line":25,"column":12,"nodeType":"286","messageId":"287","endLine":25,"endColumn":19},{"ruleId":"284","severity":1,"message":"301","line":25,"column":21,"nodeType":"286","messageId":"287","endLine":25,"endColumn":31},{"ruleId":"280","severity":1,"message":"302","line":84,"column":8,"nodeType":"282","endLine":84,"endColumn":17,"suggestions":"303"},{"ruleId":"284","severity":1,"message":"290","line":78,"column":23,"nodeType":"286","messageId":"287","endLine":78,"endColumn":37},{"ruleId":"280","severity":1,"message":"304","line":38,"column":8,"nodeType":"282","endLine":38,"endColumn":10,"suggestions":"305"},{"ruleId":"284","severity":1,"message":"298","line":11,"column":8,"nodeType":"286","messageId":"287","endLine":11,"endColumn":14},{"ruleId":"284","severity":1,"message":"306","line":16,"column":19,"nodeType":"286","messageId":"287","endLine":16,"endColumn":27},{"ruleId":"284","severity":1,"message":"307","line":17,"column":21,"nodeType":"286","messageId":"287","endLine":17,"endColumn":31},{"ruleId":"280","severity":1,"message":"304","line":36,"column":8,"nodeType":"282","endLine":36,"endColumn":10,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"309","line":4,"column":9,"nodeType":"286","messageId":"287","endLine":4,"endColumn":14},{"ruleId":"284","severity":1,"message":"310","line":5,"column":8,"nodeType":"286","messageId":"287","endLine":5,"endColumn":16},{"ruleId":"284","severity":1,"message":"311","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"312","line":3,"column":17,"nodeType":"286","messageId":"287","endLine":3,"endColumn":34},{"ruleId":"284","severity":1,"message":"298","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":14},{"ruleId":"280","severity":1,"message":"313","line":32,"column":8,"nodeType":"282","endLine":32,"endColumn":17,"suggestions":"314"},{"ruleId":"280","severity":1,"message":"313","line":40,"column":8,"nodeType":"282","endLine":40,"endColumn":15,"suggestions":"315"},{"ruleId":"284","severity":1,"message":"311","line":1,"column":17,"nodeType":"286","messageId":"287","endLine":1,"endColumn":25},{"ruleId":"284","severity":1,"message":"316","line":2,"column":20,"nodeType":"286","messageId":"287","endLine":2,"endColumn":30},{"ruleId":"284","severity":1,"message":"317","line":4,"column":5,"nodeType":"286","messageId":"287","endLine":4,"endColumn":16},{"ruleId":"284","severity":1,"message":"318","line":27,"column":8,"nodeType":"286","messageId":"287","endLine":27,"endColumn":22},{"ruleId":"284","severity":1,"message":"319","line":102,"column":12,"nodeType":"286","messageId":"287","endLine":102,"endColumn":17},{"ruleId":"284","severity":1,"message":"290","line":121,"column":25,"nodeType":"286","messageId":"287","endLine":121,"endColumn":39},{"ruleId":"284","severity":1,"message":"320","line":142,"column":11,"nodeType":"286","messageId":"287","endLine":142,"endColumn":22},{"ruleId":"321","severity":1,"message":"322","line":149,"column":17,"nodeType":"323","messageId":"324","endLine":149,"endColumn":19},{"ruleId":"284","severity":1,"message":"325","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":14},{"ruleId":"284","severity":1,"message":"326","line":7,"column":8,"nodeType":"286","messageId":"287","endLine":7,"endColumn":19},{"ruleId":"284","severity":1,"message":"327","line":12,"column":8,"nodeType":"286","messageId":"287","endLine":12,"endColumn":18},{"ruleId":"284","severity":1,"message":"328","line":17,"column":8,"nodeType":"286","messageId":"287","endLine":17,"endColumn":21},{"ruleId":"284","severity":1,"message":"307","line":57,"column":21,"nodeType":"286","messageId":"287","endLine":57,"endColumn":31},{"ruleId":"284","severity":1,"message":"329","line":58,"column":20,"nodeType":"286","messageId":"287","endLine":58,"endColumn":29},{"ruleId":"280","severity":1,"message":"330","line":76,"column":8,"nodeType":"282","endLine":76,"endColumn":12,"suggestions":"331"},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.search'. Either include them or remove the dependency array.","ArrayExpression",["334"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'user.ID'. Either include it or remove the dependency array.",["335"],"'setRowsPerPage' is assigned a value but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["336"],"'setLeave' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isPlayer'. Either include it or remove the dependency array.",["337"],"'socket' is defined but never used.","'store' is defined but never used.","'newMove' is assigned a value but never used.","'setNewMove' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'receiveMove'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["338"],"React Hook useEffect has a missing dependency: 'props.room'. Either include it or remove the dependency array.",["339"],"'setUsers' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["340"],"'green' is defined but never used.","'SendIcon' is defined but never used.","'useState' is defined but never used.","'ServerStyleSheets' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["341"],["342"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'TableChartIcon' is defined but never used.","'users' is assigned a value but never used.","'typeAccount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'isPlainObject' is defined but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["343"],"no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"354","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [history, location.search]",{"range":"363","text":"364"},"Update the dependencies array to be: [user.ID]",{"range":"365","text":"366"},"Update the dependencies array to be: [ID, user]",{"range":"367","text":"368"},"Update the dependencies array to be: [isPlayer, leave]",{"range":"369","text":"370"},"Update the dependencies array to be: [newMove, props, receiveMove]",{"range":"371","text":"372"},"Update the dependencies array to be: [props.room]",{"range":"373","text":"374"},{"range":"375","text":"374"},"Update the dependencies array to be: [counter, props]",{"range":"376","text":"377"},"Update the dependencies array to be: [props, reset]",{"range":"378","text":"379"},"Update the dependencies array to be: [ID, history]",{"range":"380","text":"381"},[2472,2474],"[history, location.search]",[2581,2583],"[user.ID]",[3839,3843],"[ID, user]",[4868,4875],"[isPlayer, leave]",[2183,2192],"[newMove, props, receiveMove]",[1102,1104],"[props.room]",[1183,1185],[826,835],"[counter, props]",[1017,1024],"[props, reset]",[2416,2420],"[ID, history]"]